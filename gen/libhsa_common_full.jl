
# Skipping MacroDefinition: NULL ( ( void * ) 0 )
# Skipping MacroDefinition: offsetof ( t , d ) __builtin_offsetof ( t , d )

const INT8_MIN = -128
const INT16_MIN = -32767 - 1
const INT32_MIN = -2147483647 - 1

# Skipping MacroDefinition: INT64_MIN ( - __INT64_C ( 9223372036854775807 ) - 1 )

const INT8_MAX = 127
const INT16_MAX = 32767
const INT32_MAX = 2147483647

# Skipping MacroDefinition: INT64_MAX ( __INT64_C ( 9223372036854775807 ) )

const UINT8_MAX = 255
const UINT16_MAX = 65535
const UINT32_MAX = UInt32(4294967295)

# Skipping MacroDefinition: UINT64_MAX ( __UINT64_C ( 18446744073709551615 ) )

const INT_LEAST8_MIN = -128
const INT_LEAST16_MIN = -32767 - 1
const INT_LEAST32_MIN = -2147483647 - 1

# Skipping MacroDefinition: INT_LEAST64_MIN ( - __INT64_C ( 9223372036854775807 ) - 1 )

const INT_LEAST8_MAX = 127
const INT_LEAST16_MAX = 32767
const INT_LEAST32_MAX = 2147483647

# Skipping MacroDefinition: INT_LEAST64_MAX ( __INT64_C ( 9223372036854775807 ) )

const UINT_LEAST8_MAX = 255
const UINT_LEAST16_MAX = 65535
const UINT_LEAST32_MAX = UInt32(4294967295)

# Skipping MacroDefinition: UINT_LEAST64_MAX ( __UINT64_C ( 18446744073709551615 ) )

const INT_FAST8_MIN = -128
const INT_FAST16_MIN = -(Int32(9223372036854775807)) - 1
const INT_FAST32_MIN = -(Int32(9223372036854775807)) - 1

# Skipping MacroDefinition: INT_FAST64_MIN ( - __INT64_C ( 9223372036854775807 ) - 1 )

const INT_FAST8_MAX = 127
const INT_FAST16_MAX = Int32(9223372036854775807)
const INT_FAST32_MAX = Int32(9223372036854775807)

# Skipping MacroDefinition: INT_FAST64_MAX ( __INT64_C ( 9223372036854775807 ) )

const UINT_FAST8_MAX = 255
const UINT_FAST16_MAX = UInt32(18446744073709551615)
const UINT_FAST32_MAX = UInt32(18446744073709551615)

# Skipping MacroDefinition: UINT_FAST64_MAX ( __UINT64_C ( 18446744073709551615 ) )

const INTPTR_MIN = -(Int32(9223372036854775807)) - 1
const INTPTR_MAX = Int32(9223372036854775807)
const UINTPTR_MAX = UInt32(18446744073709551615)

# Skipping MacroDefinition: INTMAX_MIN ( - __INT64_C ( 9223372036854775807 ) - 1 )
# Skipping MacroDefinition: INTMAX_MAX ( __INT64_C ( 9223372036854775807 ) )
# Skipping MacroDefinition: UINTMAX_MAX ( __UINT64_C ( 18446744073709551615 ) )

const PTRDIFF_MIN = -(Int32(9223372036854775807)) - 1
const PTRDIFF_MAX = Int32(9223372036854775807)
const SIG_ATOMIC_MIN = -2147483647 - 1
const SIG_ATOMIC_MAX = 2147483647
const SIZE_MAX = UInt32(18446744073709551615)
const WCHAR_MIN = __WCHAR_MIN
const WCHAR_MAX = __WCHAR_MAX
const WINT_MIN = UInt32(0)
const WINT_MAX = UInt32(4294967295)

# Skipping MacroDefinition: INT8_C ( c ) c
# Skipping MacroDefinition: INT16_C ( c ) c
# Skipping MacroDefinition: INT32_C ( c ) c
# Skipping MacroDefinition: INT64_C ( c ) c ## L
# Skipping MacroDefinition: UINT8_C ( c ) c
# Skipping MacroDefinition: UINT16_C ( c ) c
# Skipping MacroDefinition: UINT32_C ( c ) c ## U
# Skipping MacroDefinition: UINT64_C ( c ) c ## UL
# Skipping MacroDefinition: INTMAX_C ( c ) c ## L
# Skipping MacroDefinition: UINTMAX_C ( c ) c ## UL

const AMD_HSA_ABI_VERSION = "AMD GPU Architecture v0.35 (June 25, 2015)"

# Skipping MacroDefinition: AMD_HSA_BITS_CREATE_ENUM_ENTRIES ( name , shift , width ) name ## _SHIFT = ( shift ) , name ## _WIDTH = ( width ) , name = ( ( ( 1 << ( width ) ) - 1 ) << ( shift ) )
# Skipping MacroDefinition: AMD_HSA_BITS_GET ( src , mask ) ( ( src & mask ) >> mask ## _SHIFT )
# Skipping MacroDefinition: AMD_HSA_BITS_SET ( dst , mask , val ) dst &= ( ~ ( 1 << mask ## _SHIFT ) & ~ mask ) ; dst |= ( ( ( val ) << mask ## _SHIFT ) & mask )

const ptrdiff_t = Clong
const size_t = Culong
const wchar_t = Cint

struct max_align_t
    __clang_max_align_nonce1::Clonglong
    __clang_max_align_nonce2::Float64
end

struct __fsid_t
    __val::NTuple{2, Cint}
end

const int8_t = __int8_t
const int16_t = __int16_t
const int32_t = __int32_t
const int64_t = __int64_t
const uint8_t = __uint8_t
const uint16_t = __uint16_t
const uint32_t = __uint32_t
const uint64_t = __uint64_t
const int_least8_t = UInt8
const int_least16_t = Int16
const int_least32_t = Cint
const int_least64_t = Clong
const uint_least8_t = Cuchar
const uint_least16_t = UInt16
const uint_least32_t = UInt32
const uint_least64_t = Culong
const int_fast8_t = UInt8
const int_fast16_t = Clong
const int_fast32_t = Clong
const int_fast64_t = Clong
const uint_fast8_t = Cuchar
const uint_fast16_t = Culong
const uint_fast32_t = Culong
const uint_fast64_t = Culong
const intptr_t = Clong
const uintptr_t = Culong
const intmax_t = __intmax_t
const uintmax_t = __uintmax_t
const EM_AMDGPU = 224
const ELFOSABI_AMDGPU_HSA = 64
const ELFABIVERSION_AMDGPU_HSA = 0
const EF_AMDGPU_XNACK = 0x00000001
const EF_AMDGPU_TRAP_HANDLER = 0x00000002
const EF_AMDGPU_MACH_LC = Float32(0x0f)
const EF_AMDGPU_MACH_AMDGCN_GFX700_LC = 0x0022
const EF_AMDGPU_MACH_AMDGCN_GFX701_LC = 0x0023
const EF_AMDGPU_MACH_AMDGCN_GFX702_LC = 0x0024
const EF_AMDGPU_MACH_AMDGCN_GFX801_LC = 0x0028
const EF_AMDGPU_MACH_AMDGCN_GFX802_LC = 0x0029
const EF_AMDGPU_MACH_AMDGCN_GFX803_LC = 0x002a
const EF_AMDGPU_MACH_AMDGCN_GFX810_LC = 0x002b
const EF_AMDGPU_MACH_AMDGCN_GFX900_LC = 0x002c
const EF_AMDGPU_MACH_AMDGCN_GFX902_LC = 0x002d
const EF_AMDGPU_MACH_AMDGCN_GFX904_LC = 0x002e
const EF_AMDGPU_MACH_AMDGCN_GFX906_LC = Float32(0x02)
const EF_AMDGPU_MACH_AMDGCN_GFX908_LC = 0x0030
const EF_AMDGPU_MACH_AMDGCN_GFX909_LC = 0x0031
const EF_AMDGPU_MACH_AMDGCN_GFX1010_LC = 0x0033
const EF_AMDGPU_MACH_AMDGCN_GFX1011_LC = 0x0034
const EF_AMDGPU_MACH_AMDGCN_GFX1012_LC = 0x0035
const EF_AMDGPU_XNACK_LC = 0x0100
const EF_AMDGPU_SRAM_ECC_LC = 0x0200
const SHF_AMDGPU_HSA_GLOBAL = 0x00100000 & SHF_MASKOS
const SHF_AMDGPU_HSA_READONLY = 0x00200000 & SHF_MASKOS
const SHF_AMDGPU_HSA_CODE = 0x00400000 & SHF_MASKOS
const SHF_AMDGPU_HSA_AGENT = 0x00800000 & SHF_MASKOS

@cenum amdgpu_hsa_elf_segment_t::UInt32 begin
    AMDGPU_HSA_SEGMENT_GLOBAL_PROGRAM = 0
    AMDGPU_HSA_SEGMENT_GLOBAL_AGENT = 1
    AMDGPU_HSA_SEGMENT_READONLY_AGENT = 2
    AMDGPU_HSA_SEGMENT_CODE_AGENT = 3
    AMDGPU_HSA_SEGMENT_LAST = 4
end


const PT_AMDGPU_HSA_LOAD_GLOBAL_PROGRAM = PT_LOOS + AMDGPU_HSA_SEGMENT_GLOBAL_PROGRAM
const PT_AMDGPU_HSA_LOAD_GLOBAL_AGENT = PT_LOOS + AMDGPU_HSA_SEGMENT_GLOBAL_AGENT
const PT_AMDGPU_HSA_LOAD_READONLY_AGENT = PT_LOOS + AMDGPU_HSA_SEGMENT_READONLY_AGENT
const PT_AMDGPU_HSA_LOAD_CODE_AGENT = PT_LOOS + AMDGPU_HSA_SEGMENT_CODE_AGENT
const STT_AMDGPU_HSA_KERNEL = STT_LOOS + 0
const STT_AMDGPU_HSA_INDIRECT_FUNCTION = STT_LOOS + 1
const STT_AMDGPU_HSA_METADATA = STT_LOOS + 2
const STB_AMDGPU_HSA_EXTERNAL = STB_LOOS + 0

# Skipping MacroDefinition: ELF64_ST_AMDGPU_ALLOCATION ( o ) ( ( ( o ) >> 2 ) & 0x3 )
# Skipping MacroDefinition: ELF64_ST_AMDGPU_FLAGS ( o ) ( ( o ) >> 4 )
# Skipping MacroDefinition: ELF64_ST_AMDGPU_OTHER ( f , a , v ) ( ( ( f ) << 4 ) + ( ( ( a ) & 0x3 ) << 2 ) + ( ( v ) & 0x3 ) )

@cenum amdgpu_hsa_symbol_allocation_t::UInt32 begin
    AMDGPU_HSA_SYMBOL_ALLOCATION_DEFAULT = 0
    AMDGPU_HSA_SYMBOL_ALLOCATION_GLOBAL_PROGRAM = 1
    AMDGPU_HSA_SYMBOL_ALLOCATION_GLOBAL_AGENT = 2
    AMDGPU_HSA_SYMBOL_ALLOCATION_READONLY_AGENT = 3
    AMDGPU_HSA_SYMBOL_ALLOCATION_LAST = 4
end


const STA_AMDGPU_HSA_DEFAULT = AMDGPU_HSA_SYMBOL_ALLOCATION_DEFAULT
const STA_AMDGPU_HSA_GLOBAL_PROGRAM = AMDGPU_HSA_SYMBOL_ALLOCATION_GLOBAL_PROGRAM
const STA_AMDGPU_HSA_GLOBAL_AGENT = AMDGPU_HSA_SYMBOL_ALLOCATION_GLOBAL_AGENT
const STA_AMDGPU_HSA_READONLY_AGENT = AMDGPU_HSA_SYMBOL_ALLOCATION_READONLY_AGENT

@cenum amdgpu_hsa_symbol_flag_t::UInt32 begin
    AMDGPU_HSA_SYMBOL_FLAG_DEFAULT = 0
    AMDGPU_HSA_SYMBOL_FLAG_CONST = 1
    AMDGPU_HSA_SYMBOL_FLAG_LAST = 2
end


const STF_AMDGPU_HSA_CONST = AMDGPU_HSA_SYMBOL_FLAG_CONST
const R_AMDGPU_NONE = 0
const R_AMDGPU_32_LOW = 1
const R_AMDGPU_32_HIGH = 2
const R_AMDGPU_64 = 3
const R_AMDGPU_INIT_SAMPLER = 4
const R_AMDGPU_INIT_IMAGE = 5
const R_AMDGPU_RELATIVE64 = 13
const NT_AMDGPU_HSA_CODE_OBJECT_VERSION = 1
const NT_AMDGPU_HSA_HSAIL = 2
const NT_AMDGPU_HSA_ISA = 3
const NT_AMDGPU_HSA_PRODUCER = 4
const NT_AMDGPU_HSA_PRODUCER_OPTIONS = 5
const NT_AMDGPU_HSA_EXTENSION = 6
const NT_AMDGPU_HSA_HLDEBUG_DEBUG = 101
const NT_AMDGPU_HSA_HLDEBUG_TARGET = 102
const amdgpu_hsa_metadata_kind16_t = UInt16

@cenum amdgpu_hsa_metadata_kind_t::UInt32 begin
    AMDGPU_HSA_METADATA_KIND_NONE = 0
    AMDGPU_HSA_METADATA_KIND_INIT_SAMP = 1
    AMDGPU_HSA_METADATA_KIND_INIT_ROIMG = 2
    AMDGPU_HSA_METADATA_KIND_INIT_WOIMG = 3
    AMDGPU_HSA_METADATA_KIND_INIT_RWIMG = 4
end


const amdgpu_hsa_sampler_coord8_t = UInt8

@cenum amdgpu_hsa_sampler_coord_t::UInt32 begin
    AMDGPU_HSA_SAMPLER_COORD_UNNORMALIZED = 0
    AMDGPU_HSA_SAMPLER_COORD_NORMALIZED = 1
end


const amdgpu_hsa_sampler_filter8_t = UInt8

@cenum amdgpu_hsa_sampler_filter_t::UInt32 begin
    AMDGPU_HSA_SAMPLER_FILTER_NEAREST = 0
    AMDGPU_HSA_SAMPLER_FILTER_LINEAR = 1
end


const amdgpu_hsa_sampler_addressing8_t = UInt8

@cenum amdgpu_hsa_sampler_addressing_t::UInt32 begin
    AMDGPU_HSA_SAMPLER_ADDRESSING_UNDEFINED = 0
    AMDGPU_HSA_SAMPLER_ADDRESSING_CLAMP_TO_EDGE = 1
    AMDGPU_HSA_SAMPLER_ADDRESSING_CLAMP_TO_BORDER = 2
    AMDGPU_HSA_SAMPLER_ADDRESSING_REPEAT = 3
    AMDGPU_HSA_SAMPLER_ADDRESSING_MIRRORED_REPEAT = 4
end


struct amdgpu_hsa_sampler_descriptor_s
    size::UInt16
    kind::amdgpu_hsa_metadata_kind16_t
    coord::amdgpu_hsa_sampler_coord8_t
    filter::amdgpu_hsa_sampler_filter8_t
    addressing::amdgpu_hsa_sampler_addressing8_t
    reserved1::UInt8
end

const amdgpu_hsa_sampler_descriptor_t = amdgpu_hsa_sampler_descriptor_s
const amdgpu_hsa_image_geometry8_t = UInt8

@cenum amdgpu_hsa_image_geometry_t::UInt32 begin
    AMDGPU_HSA_IMAGE_GEOMETRY_1D = 0
    AMDGPU_HSA_IMAGE_GEOMETRY_2D = 1
    AMDGPU_HSA_IMAGE_GEOMETRY_3D = 2
    AMDGPU_HSA_IMAGE_GEOMETRY_1DA = 3
    AMDGPU_HSA_IMAGE_GEOMETRY_2DA = 4
    AMDGPU_HSA_IMAGE_GEOMETRY_1DB = 5
    AMDGPU_HSA_IMAGE_GEOMETRY_2DDEPTH = 6
    AMDGPU_HSA_IMAGE_GEOMETRY_2DADEPTH = 7
end


const amdgpu_hsa_image_channel_order8_t = UInt8

@cenum amdgpu_hsa_image_channel_order_t::UInt32 begin
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_A = 0
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_R = 1
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_RX = 2
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_RG = 3
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_RGX = 4
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_RA = 5
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_RGB = 6
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_RGBX = 7
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_RGBA = 8
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_BGRA = 9
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_ARGB = 10
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_ABGR = 11
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_SRGB = 12
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_SRGBX = 13
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_SRGBA = 14
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_SBGRA = 15
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_INTENSITY = 16
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_LUMINANCE = 17
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_DEPTH = 18
    AMDGPU_HSA_IMAGE_CHANNEL_ORDER_DEPTH_STENCIL = 19
end


const amdgpu_hsa_image_channel_type8_t = UInt8

@cenum amdgpu_hsa_image_channel_type_t::UInt32 begin
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_SNORM_INT8 = 0
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_SNORM_INT16 = 1
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_UNORM_INT8 = 2
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_UNORM_INT16 = 3
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_UNORM_INT24 = 4
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_SHORT_555 = 5
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_SHORT_565 = 6
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_INT_101010 = 7
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_SIGNED_INT8 = 8
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_SIGNED_INT16 = 9
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_SIGNED_INT32 = 10
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_UNSIGNED_INT8 = 11
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_UNSIGNED_INT16 = 12
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_UNSIGNED_INT32 = 13
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_HALF_FLOAT = 14
    AMDGPU_HSA_IMAGE_CHANNEL_TYPE_FLOAT = 15
end


struct amdgpu_hsa_image_descriptor_s
    size::UInt16
    kind::amdgpu_hsa_metadata_kind16_t
    geometry::amdgpu_hsa_image_geometry8_t
    channel_order::amdgpu_hsa_image_channel_order8_t
    channel_type::amdgpu_hsa_image_channel_type8_t
    reserved1::UInt8
    width::UInt64
    height::UInt64
    depth::UInt64
    array::UInt64
end

const amdgpu_hsa_image_descriptor_t = amdgpu_hsa_image_descriptor_s

struct amdgpu_hsa_note_code_object_version_s
    major_version::UInt32
    minor_version::UInt32
end

const amdgpu_hsa_note_code_object_version_t = amdgpu_hsa_note_code_object_version_s

struct amdgpu_hsa_note_hsail_s
    hsail_major_version::UInt32
    hsail_minor_version::UInt32
    profile::UInt8
    machine_model::UInt8
    default_float_round::UInt8
end

const amdgpu_hsa_note_hsail_t = amdgpu_hsa_note_hsail_s

struct amdgpu_hsa_note_isa_s
    vendor_name_size::UInt16
    architecture_name_size::UInt16
    major::UInt32
    minor::UInt32
    stepping::UInt32
    vendor_and_architecture_name::NTuple{1, UInt8}
end

const amdgpu_hsa_note_isa_t = amdgpu_hsa_note_isa_s

struct amdgpu_hsa_note_producer_s
    producer_name_size::UInt16
    reserved::UInt16
    producer_major_version::UInt32
    producer_minor_version::UInt32
    producer_name::NTuple{1, UInt8}
end

const amdgpu_hsa_note_producer_t = amdgpu_hsa_note_producer_s

struct amdgpu_hsa_note_producer_options_s
    producer_options_size::UInt16
    producer_options::NTuple{1, UInt8}
end

const amdgpu_hsa_note_producer_options_t = amdgpu_hsa_note_producer_options_s

@cenum amdgpu_hsa_elf_section_t::UInt32 begin
    AMDGPU_HSA_RODATA_GLOBAL_PROGRAM = 0
    AMDGPU_HSA_RODATA_GLOBAL_AGENT = 1
    AMDGPU_HSA_RODATA_READONLY_AGENT = 2
    AMDGPU_HSA_DATA_GLOBAL_PROGRAM = 3
    AMDGPU_HSA_DATA_GLOBAL_AGENT = 4
    AMDGPU_HSA_DATA_READONLY_AGENT = 5
    AMDGPU_HSA_BSS_GLOBAL_PROGRAM = 6
    AMDGPU_HSA_BSS_GLOBAL_AGENT = 7
    AMDGPU_HSA_BSS_READONLY_AGENT = 8
    AMDGPU_HSA_SECTION_LAST = 9
end


const _true = 1
const _false = 0

# Skipping MacroDefinition: HSA_EXPORT_DECORATOR __attribute__ ( ( visibility ( "default" ) ) )

const HSA_API_EXPORT = HSA_EXPORT_DECORATOR
const HSA_API_IMPORT = HSA_CALL
const HSA_API = HSA_API_IMPORT
const HSA_VERSION_1_0 = 1
const AMD_CONTROL_DIRECTIVES_ALIGN_BYTES = 64

# Skipping MacroDefinition: AMD_CONTROL_DIRECTIVES_ALIGN __ALIGNED__ ( AMD_CONTROL_DIRECTIVES_ALIGN_BYTES )

const AMD_ISA_ALIGN_BYTES = 256
const AMD_KERNEL_CODE_ALIGN_BYTES = 64

# Skipping MacroDefinition: AMD_KERNEL_CODE_ALIGN __ALIGNED__ ( AMD_KERNEL_CODE_ALIGN_BYTES )

@cenum hsa_status_t::UInt32 begin
    HSA_STATUS_SUCCESS = 0
    HSA_STATUS_INFO_BREAK = 1
    HSA_STATUS_ERROR = 4096
    HSA_STATUS_ERROR_INVALID_ARGUMENT = 4097
    HSA_STATUS_ERROR_INVALID_QUEUE_CREATION = 4098
    HSA_STATUS_ERROR_INVALID_ALLOCATION = 4099
    HSA_STATUS_ERROR_INVALID_AGENT = 4100
    HSA_STATUS_ERROR_INVALID_REGION = 4101
    HSA_STATUS_ERROR_INVALID_SIGNAL = 4102
    HSA_STATUS_ERROR_INVALID_QUEUE = 4103
    HSA_STATUS_ERROR_OUT_OF_RESOURCES = 4104
    HSA_STATUS_ERROR_INVALID_PACKET_FORMAT = 4105
    HSA_STATUS_ERROR_RESOURCE_FREE = 4106
    HSA_STATUS_ERROR_NOT_INITIALIZED = 4107
    HSA_STATUS_ERROR_REFCOUNT_OVERFLOW = 4108
    HSA_STATUS_ERROR_INCOMPATIBLE_ARGUMENTS = 4109
    HSA_STATUS_ERROR_INVALID_INDEX = 4110
    HSA_STATUS_ERROR_INVALID_ISA = 4111
    HSA_STATUS_ERROR_INVALID_ISA_NAME = 4119
    HSA_STATUS_ERROR_INVALID_CODE_OBJECT = 4112
    HSA_STATUS_ERROR_INVALID_EXECUTABLE = 4113
    HSA_STATUS_ERROR_FROZEN_EXECUTABLE = 4114
    HSA_STATUS_ERROR_INVALID_SYMBOL_NAME = 4115
    HSA_STATUS_ERROR_VARIABLE_ALREADY_DEFINED = 4116
    HSA_STATUS_ERROR_VARIABLE_UNDEFINED = 4117
    HSA_STATUS_ERROR_EXCEPTION = 4118
    HSA_STATUS_ERROR_INVALID_CODE_SYMBOL = 4120
    HSA_STATUS_ERROR_INVALID_EXECUTABLE_SYMBOL = 4121
    HSA_STATUS_ERROR_INVALID_FILE = 4128
    HSA_STATUS_ERROR_INVALID_CODE_OBJECT_READER = 4129
    HSA_STATUS_ERROR_INVALID_CACHE = 4130
    HSA_STATUS_ERROR_INVALID_WAVEFRONT = 4131
    HSA_STATUS_ERROR_INVALID_SIGNAL_GROUP = 4132
    HSA_STATUS_ERROR_INVALID_RUNTIME_STATE = 4133
    HSA_STATUS_ERROR_FATAL = 4134
end


struct hsa_dim3_s
    x::UInt32
    y::UInt32
    z::UInt32
end

const hsa_dim3_t = hsa_dim3_s

@cenum hsa_access_permission_t::UInt32 begin
    HSA_ACCESS_PERMISSION_RO = 1
    HSA_ACCESS_PERMISSION_WO = 2
    HSA_ACCESS_PERMISSION_RW = 3
end


const hsa_file_t = Cint

@cenum hsa_endianness_t::UInt32 begin
    HSA_ENDIANNESS_LITTLE = 0
    HSA_ENDIANNESS_BIG = 1
end

@cenum hsa_machine_model_t::UInt32 begin
    HSA_MACHINE_MODEL_SMALL = 0
    HSA_MACHINE_MODEL_LARGE = 1
end

@cenum hsa_profile_t::UInt32 begin
    HSA_PROFILE_BASE = 0
    HSA_PROFILE_FULL = 1
end

@cenum hsa_system_info_t::UInt32 begin
    HSA_SYSTEM_INFO_VERSION_MAJOR = 0
    HSA_SYSTEM_INFO_VERSION_MINOR = 1
    HSA_SYSTEM_INFO_TIMESTAMP = 2
    HSA_SYSTEM_INFO_TIMESTAMP_FREQUENCY = 3
    HSA_SYSTEM_INFO_SIGNAL_MAX_WAIT = 4
    HSA_SYSTEM_INFO_ENDIANNESS = 5
    HSA_SYSTEM_INFO_MACHINE_MODEL = 6
    HSA_SYSTEM_INFO_EXTENSIONS = 7
    HSA_AMD_SYSTEM_INFO_BUILD_VERSION = 512
end

@cenum hsa_extension_t::UInt32 begin
    HSA_EXTENSION_FINALIZER = 0
    HSA_EXTENSION_IMAGES = 1
    HSA_EXTENSION_PERFORMANCE_COUNTERS = 2
    HSA_EXTENSION_PROFILING_EVENTS = 3
    HSA_EXTENSION_STD_LAST = 3
    HSA_AMD_FIRST_EXTENSION = 512
    HSA_EXTENSION_AMD_PROFILER = 512
    HSA_EXTENSION_AMD_LOADER = 513
    HSA_EXTENSION_AMD_AQLPROFILE = 514
    HSA_AMD_LAST_EXTENSION = 514
end


struct hsa_agent_s
    handle::UInt64
end

const hsa_agent_t = hsa_agent_s

@cenum hsa_agent_feature_t::UInt32 begin
    HSA_AGENT_FEATURE_KERNEL_DISPATCH = 1
    HSA_AGENT_FEATURE_AGENT_DISPATCH = 2
end

@cenum hsa_device_type_t::UInt32 begin
    HSA_DEVICE_TYPE_CPU = 0
    HSA_DEVICE_TYPE_GPU = 1
    HSA_DEVICE_TYPE_DSP = 2
end

@cenum hsa_default_float_rounding_mode_t::UInt32 begin
    HSA_DEFAULT_FLOAT_ROUNDING_MODE_DEFAULT = 0
    HSA_DEFAULT_FLOAT_ROUNDING_MODE_ZERO = 1
    HSA_DEFAULT_FLOAT_ROUNDING_MODE_NEAR = 2
end

@cenum hsa_agent_info_t::UInt32 begin
    HSA_AGENT_INFO_NAME = 0
    HSA_AGENT_INFO_VENDOR_NAME = 1
    HSA_AGENT_INFO_FEATURE = 2
    HSA_AGENT_INFO_MACHINE_MODEL = 3
    HSA_AGENT_INFO_PROFILE = 4
    HSA_AGENT_INFO_DEFAULT_FLOAT_ROUNDING_MODE = 5
    HSA_AGENT_INFO_BASE_PROFILE_DEFAULT_FLOAT_ROUNDING_MODES = 23
    HSA_AGENT_INFO_FAST_F16_OPERATION = 24
    HSA_AGENT_INFO_WAVEFRONT_SIZE = 6
    HSA_AGENT_INFO_WORKGROUP_MAX_DIM = 7
    HSA_AGENT_INFO_WORKGROUP_MAX_SIZE = 8
    HSA_AGENT_INFO_GRID_MAX_DIM = 9
    HSA_AGENT_INFO_GRID_MAX_SIZE = 10
    HSA_AGENT_INFO_FBARRIER_MAX_SIZE = 11
    HSA_AGENT_INFO_QUEUES_MAX = 12
    HSA_AGENT_INFO_QUEUE_MIN_SIZE = 13
    HSA_AGENT_INFO_QUEUE_MAX_SIZE = 14
    HSA_AGENT_INFO_QUEUE_TYPE = 15
    HSA_AGENT_INFO_NODE = 16
    HSA_AGENT_INFO_DEVICE = 17
    HSA_AGENT_INFO_CACHE_SIZE = 18
    HSA_AGENT_INFO_ISA = 19
    HSA_AGENT_INFO_EXTENSIONS = 20
    HSA_AGENT_INFO_VERSION_MAJOR = 21
    HSA_AGENT_INFO_VERSION_MINOR = 22
end

@cenum hsa_exception_policy_t::UInt32 begin
    HSA_EXCEPTION_POLICY_BREAK = 1
    HSA_EXCEPTION_POLICY_DETECT = 2
end


struct hsa_cache_s
    handle::UInt64
end

const hsa_cache_t = hsa_cache_s

@cenum hsa_cache_info_t::UInt32 begin
    HSA_CACHE_INFO_NAME_LENGTH = 0
    HSA_CACHE_INFO_NAME = 1
    HSA_CACHE_INFO_LEVEL = 2
    HSA_CACHE_INFO_SIZE = 3
end


struct hsa_signal_s
    handle::UInt64
end

const hsa_signal_t = hsa_signal_s
const hsa_signal_value_t = Int64

@cenum hsa_signal_condition_t::UInt32 begin
    HSA_SIGNAL_CONDITION_EQ = 0
    HSA_SIGNAL_CONDITION_NE = 1
    HSA_SIGNAL_CONDITION_LT = 2
    HSA_SIGNAL_CONDITION_GTE = 3
end

@cenum hsa_wait_state_t::UInt32 begin
    HSA_WAIT_STATE_BLOCKED = 0
    HSA_WAIT_STATE_ACTIVE = 1
end


struct hsa_signal_group_s
    handle::UInt64
end

const hsa_signal_group_t = hsa_signal_group_s

struct hsa_region_s
    handle::UInt64
end

const hsa_region_t = hsa_region_s

@cenum hsa_queue_type_t::UInt32 begin
    HSA_QUEUE_TYPE_MULTI = 0
    HSA_QUEUE_TYPE_SINGLE = 1
end


const hsa_queue_type32_t = UInt32

@cenum hsa_queue_feature_t::UInt32 begin
    HSA_QUEUE_FEATURE_KERNEL_DISPATCH = 1
    HSA_QUEUE_FEATURE_AGENT_DISPATCH = 2
end


struct hsa_queue_s
    type::hsa_queue_type32_t
    features::UInt32
    base_address::Ptr{Cvoid}
    doorbell_signal::hsa_signal_t
    size::UInt32
    reserved1::UInt32
    id::UInt64
end

const hsa_queue_t = hsa_queue_s

@cenum hsa_packet_type_t::UInt32 begin
    HSA_PACKET_TYPE_VENDOR_SPECIFIC = 0
    HSA_PACKET_TYPE_INVALID = 1
    HSA_PACKET_TYPE_KERNEL_DISPATCH = 2
    HSA_PACKET_TYPE_BARRIER_AND = 3
    HSA_PACKET_TYPE_AGENT_DISPATCH = 4
    HSA_PACKET_TYPE_BARRIER_OR = 5
end

@cenum hsa_fence_scope_t::UInt32 begin
    HSA_FENCE_SCOPE_NONE = 0
    HSA_FENCE_SCOPE_AGENT = 1
    HSA_FENCE_SCOPE_SYSTEM = 2
end

@cenum hsa_packet_header_t::UInt32 begin
    HSA_PACKET_HEADER_TYPE = 0
    HSA_PACKET_HEADER_BARRIER = 8
    HSA_PACKET_HEADER_SCACQUIRE_FENCE_SCOPE = 9
    HSA_PACKET_HEADER_ACQUIRE_FENCE_SCOPE = 9
    HSA_PACKET_HEADER_SCRELEASE_FENCE_SCOPE = 11
    HSA_PACKET_HEADER_RELEASE_FENCE_SCOPE = 11
end

@cenum hsa_packet_header_width_t::UInt32 begin
    HSA_PACKET_HEADER_WIDTH_TYPE = 8
    HSA_PACKET_HEADER_WIDTH_BARRIER = 1
    HSA_PACKET_HEADER_WIDTH_SCACQUIRE_FENCE_SCOPE = 2
    HSA_PACKET_HEADER_WIDTH_ACQUIRE_FENCE_SCOPE = 2
    HSA_PACKET_HEADER_WIDTH_SCRELEASE_FENCE_SCOPE = 2
    HSA_PACKET_HEADER_WIDTH_RELEASE_FENCE_SCOPE = 2
end

@cenum hsa_kernel_dispatch_packet_setup_t::UInt32 begin
    HSA_KERNEL_DISPATCH_PACKET_SETUP_DIMENSIONS = 0
end

@cenum hsa_kernel_dispatch_packet_setup_width_t::UInt32 begin
    HSA_KERNEL_DISPATCH_PACKET_SETUP_WIDTH_DIMENSIONS = 2
end


struct hsa_kernel_dispatch_packet_s
    header::UInt16
    setup::UInt16
    workgroup_size_x::UInt16
    workgroup_size_y::UInt16
    workgroup_size_z::UInt16
    reserved0::UInt16
    grid_size_x::UInt32
    grid_size_y::UInt32
    grid_size_z::UInt32
    private_segment_size::UInt32
    group_segment_size::UInt32
    kernel_object::UInt64
    kernarg_address::Ptr{Cvoid}
    reserved2::UInt64
    completion_signal::hsa_signal_t
end

const hsa_kernel_dispatch_packet_t = hsa_kernel_dispatch_packet_s

struct hsa_agent_dispatch_packet_s
    header::UInt16
    type::UInt16
    reserved0::UInt32
    return_address::Ptr{Cvoid}
    arg::NTuple{4, UInt64}
    reserved2::UInt64
    completion_signal::hsa_signal_t
end

const hsa_agent_dispatch_packet_t = hsa_agent_dispatch_packet_s

struct hsa_barrier_and_packet_s
    header::UInt16
    reserved0::UInt16
    reserved1::UInt32
    dep_signal::NTuple{5, hsa_signal_t}
    reserved2::UInt64
    completion_signal::hsa_signal_t
end

const hsa_barrier_and_packet_t = hsa_barrier_and_packet_s

struct hsa_barrier_or_packet_s
    header::UInt16
    reserved0::UInt16
    reserved1::UInt32
    dep_signal::NTuple{5, hsa_signal_t}
    reserved2::UInt64
    completion_signal::hsa_signal_t
end

const hsa_barrier_or_packet_t = hsa_barrier_or_packet_s

@cenum hsa_region_segment_t::UInt32 begin
    HSA_REGION_SEGMENT_GLOBAL = 0
    HSA_REGION_SEGMENT_READONLY = 1
    HSA_REGION_SEGMENT_PRIVATE = 2
    HSA_REGION_SEGMENT_GROUP = 3
    HSA_REGION_SEGMENT_KERNARG = 4
end

@cenum hsa_region_global_flag_t::UInt32 begin
    HSA_REGION_GLOBAL_FLAG_KERNARG = 1
    HSA_REGION_GLOBAL_FLAG_FINE_GRAINED = 2
    HSA_REGION_GLOBAL_FLAG_COARSE_GRAINED = 4
end

@cenum hsa_region_info_t::UInt32 begin
    HSA_REGION_INFO_SEGMENT = 0
    HSA_REGION_INFO_GLOBAL_FLAGS = 1
    HSA_REGION_INFO_SIZE = 2
    HSA_REGION_INFO_ALLOC_MAX_SIZE = 4
    HSA_REGION_INFO_ALLOC_MAX_PRIVATE_WORKGROUP_SIZE = 8
    HSA_REGION_INFO_RUNTIME_ALLOC_ALLOWED = 5
    HSA_REGION_INFO_RUNTIME_ALLOC_GRANULE = 6
    HSA_REGION_INFO_RUNTIME_ALLOC_ALIGNMENT = 7
end


struct hsa_isa_s
    handle::UInt64
end

const hsa_isa_t = hsa_isa_s

@cenum hsa_isa_info_t::UInt32 begin
    HSA_ISA_INFO_NAME_LENGTH = 0
    HSA_ISA_INFO_NAME = 1
    HSA_ISA_INFO_CALL_CONVENTION_COUNT = 2
    HSA_ISA_INFO_CALL_CONVENTION_INFO_WAVEFRONT_SIZE = 3
    HSA_ISA_INFO_CALL_CONVENTION_INFO_WAVEFRONTS_PER_COMPUTE_UNIT = 4
    HSA_ISA_INFO_MACHINE_MODELS = 5
    HSA_ISA_INFO_PROFILES = 6
    HSA_ISA_INFO_DEFAULT_FLOAT_ROUNDING_MODES = 7
    HSA_ISA_INFO_BASE_PROFILE_DEFAULT_FLOAT_ROUNDING_MODES = 8
    HSA_ISA_INFO_FAST_F16_OPERATION = 9
    HSA_ISA_INFO_WORKGROUP_MAX_DIM = 12
    HSA_ISA_INFO_WORKGROUP_MAX_SIZE = 13
    HSA_ISA_INFO_GRID_MAX_DIM = 14
    HSA_ISA_INFO_GRID_MAX_SIZE = 16
    HSA_ISA_INFO_FBARRIER_MAX_SIZE = 17
end

@cenum hsa_fp_type_t::UInt32 begin
    HSA_FP_TYPE_16 = 1
    HSA_FP_TYPE_32 = 2
    HSA_FP_TYPE_64 = 4
end

@cenum hsa_flush_mode_t::UInt32 begin
    HSA_FLUSH_MODE_FTZ = 1
    HSA_FLUSH_MODE_NON_FTZ = 2
end

@cenum hsa_round_method_t::UInt32 begin
    HSA_ROUND_METHOD_SINGLE = 1
    HSA_ROUND_METHOD_DOUBLE = 2
end


struct hsa_wavefront_s
    handle::UInt64
end

const hsa_wavefront_t = hsa_wavefront_s

@cenum hsa_wavefront_info_t::UInt32 begin
    HSA_WAVEFRONT_INFO_SIZE = 0
end


struct hsa_code_object_reader_s
    handle::UInt64
end

const hsa_code_object_reader_t = hsa_code_object_reader_s

struct hsa_executable_s
    handle::UInt64
end

const hsa_executable_t = hsa_executable_s

@cenum hsa_executable_state_t::UInt32 begin
    HSA_EXECUTABLE_STATE_UNFROZEN = 0
    HSA_EXECUTABLE_STATE_FROZEN = 1
end


struct hsa_loaded_code_object_s
    handle::UInt64
end

const hsa_loaded_code_object_t = hsa_loaded_code_object_s

@cenum hsa_executable_info_t::UInt32 begin
    HSA_EXECUTABLE_INFO_PROFILE = 1
    HSA_EXECUTABLE_INFO_STATE = 2
    HSA_EXECUTABLE_INFO_DEFAULT_FLOAT_ROUNDING_MODE = 3
end


struct hsa_executable_symbol_s
    handle::UInt64
end

const hsa_executable_symbol_t = hsa_executable_symbol_s

@cenum hsa_symbol_kind_t::UInt32 begin
    HSA_SYMBOL_KIND_VARIABLE = 0
    HSA_SYMBOL_KIND_KERNEL = 1
    HSA_SYMBOL_KIND_INDIRECT_FUNCTION = 2
end

@cenum hsa_symbol_linkage_t::UInt32 begin
    HSA_SYMBOL_LINKAGE_MODULE = 0
    HSA_SYMBOL_LINKAGE_PROGRAM = 1
end

@cenum hsa_variable_allocation_t::UInt32 begin
    HSA_VARIABLE_ALLOCATION_AGENT = 0
    HSA_VARIABLE_ALLOCATION_PROGRAM = 1
end

@cenum hsa_variable_segment_t::UInt32 begin
    HSA_VARIABLE_SEGMENT_GLOBAL = 0
    HSA_VARIABLE_SEGMENT_READONLY = 1
end

@cenum hsa_executable_symbol_info_t::UInt32 begin
    HSA_EXECUTABLE_SYMBOL_INFO_TYPE = 0
    HSA_EXECUTABLE_SYMBOL_INFO_NAME_LENGTH = 1
    HSA_EXECUTABLE_SYMBOL_INFO_NAME = 2
    HSA_EXECUTABLE_SYMBOL_INFO_MODULE_NAME_LENGTH = 3
    HSA_EXECUTABLE_SYMBOL_INFO_MODULE_NAME = 4
    HSA_EXECUTABLE_SYMBOL_INFO_AGENT = 20
    HSA_EXECUTABLE_SYMBOL_INFO_VARIABLE_ADDRESS = 21
    HSA_EXECUTABLE_SYMBOL_INFO_LINKAGE = 5
    HSA_EXECUTABLE_SYMBOL_INFO_IS_DEFINITION = 17
    HSA_EXECUTABLE_SYMBOL_INFO_VARIABLE_ALLOCATION = 6
    HSA_EXECUTABLE_SYMBOL_INFO_VARIABLE_SEGMENT = 7
    HSA_EXECUTABLE_SYMBOL_INFO_VARIABLE_ALIGNMENT = 8
    HSA_EXECUTABLE_SYMBOL_INFO_VARIABLE_SIZE = 9
    HSA_EXECUTABLE_SYMBOL_INFO_VARIABLE_IS_CONST = 10
    HSA_EXECUTABLE_SYMBOL_INFO_KERNEL_OBJECT = 22
    HSA_EXECUTABLE_SYMBOL_INFO_KERNEL_KERNARG_SEGMENT_SIZE = 11
    HSA_EXECUTABLE_SYMBOL_INFO_KERNEL_KERNARG_SEGMENT_ALIGNMENT = 12
    HSA_EXECUTABLE_SYMBOL_INFO_KERNEL_GROUP_SEGMENT_SIZE = 13
    HSA_EXECUTABLE_SYMBOL_INFO_KERNEL_PRIVATE_SEGMENT_SIZE = 14
    HSA_EXECUTABLE_SYMBOL_INFO_KERNEL_DYNAMIC_CALLSTACK = 15
    HSA_EXECUTABLE_SYMBOL_INFO_KERNEL_CALL_CONVENTION = 18
    HSA_EXECUTABLE_SYMBOL_INFO_INDIRECT_FUNCTION_OBJECT = 23
    HSA_EXECUTABLE_SYMBOL_INFO_INDIRECT_FUNCTION_CALL_CONVENTION = 16
end


struct hsa_code_object_s
    handle::UInt64
end

const hsa_code_object_t = hsa_code_object_s

struct hsa_callback_data_s
    handle::UInt64
end

const hsa_callback_data_t = hsa_callback_data_s

@cenum hsa_code_object_type_t::UInt32 begin
    HSA_CODE_OBJECT_TYPE_PROGRAM = 0
end

@cenum hsa_code_object_info_t::UInt32 begin
    HSA_CODE_OBJECT_INFO_VERSION = 0
    HSA_CODE_OBJECT_INFO_TYPE = 1
    HSA_CODE_OBJECT_INFO_ISA = 2
    HSA_CODE_OBJECT_INFO_MACHINE_MODEL = 3
    HSA_CODE_OBJECT_INFO_PROFILE = 4
    HSA_CODE_OBJECT_INFO_DEFAULT_FLOAT_ROUNDING_MODE = 5
end


struct hsa_code_symbol_s
    handle::UInt64
end

const hsa_code_symbol_t = hsa_code_symbol_s

@cenum hsa_code_symbol_info_t::UInt32 begin
    HSA_CODE_SYMBOL_INFO_TYPE = 0
    HSA_CODE_SYMBOL_INFO_NAME_LENGTH = 1
    HSA_CODE_SYMBOL_INFO_NAME = 2
    HSA_CODE_SYMBOL_INFO_MODULE_NAME_LENGTH = 3
    HSA_CODE_SYMBOL_INFO_MODULE_NAME = 4
    HSA_CODE_SYMBOL_INFO_LINKAGE = 5
    HSA_CODE_SYMBOL_INFO_IS_DEFINITION = 17
    HSA_CODE_SYMBOL_INFO_VARIABLE_ALLOCATION = 6
    HSA_CODE_SYMBOL_INFO_VARIABLE_SEGMENT = 7
    HSA_CODE_SYMBOL_INFO_VARIABLE_ALIGNMENT = 8
    HSA_CODE_SYMBOL_INFO_VARIABLE_SIZE = 9
    HSA_CODE_SYMBOL_INFO_VARIABLE_IS_CONST = 10
    HSA_CODE_SYMBOL_INFO_KERNEL_KERNARG_SEGMENT_SIZE = 11
    HSA_CODE_SYMBOL_INFO_KERNEL_KERNARG_SEGMENT_ALIGNMENT = 12
    HSA_CODE_SYMBOL_INFO_KERNEL_GROUP_SEGMENT_SIZE = 13
    HSA_CODE_SYMBOL_INFO_KERNEL_PRIVATE_SEGMENT_SIZE = 14
    HSA_CODE_SYMBOL_INFO_KERNEL_DYNAMIC_CALLSTACK = 15
    HSA_CODE_SYMBOL_INFO_KERNEL_CALL_CONVENTION = 18
    HSA_CODE_SYMBOL_INFO_INDIRECT_FUNCTION_CALL_CONVENTION = 16
end


const amd_kernel_code_version32_t = UInt32

@cenum amd_kernel_code_version_t::UInt32 begin
    AMD_KERNEL_CODE_VERSION_MAJOR = 1
    AMD_KERNEL_CODE_VERSION_MINOR = 1
end


const amd_machine_kind16_t = UInt16

@cenum amd_machine_kind_t::UInt32 begin
    AMD_MACHINE_KIND_UNDEFINED = 0
    AMD_MACHINE_KIND_AMDGPU = 1
end


const amd_machine_version16_t = UInt16

@cenum amd_float_round_mode_t::UInt32 begin
    AMD_FLOAT_ROUND_MODE_NEAREST_EVEN = 0
    AMD_FLOAT_ROUND_MODE_PLUS_INFINITY = 1
    AMD_FLOAT_ROUND_MODE_MINUS_INFINITY = 2
    AMD_FLOAT_ROUND_MODE_ZERO = 3
end

@cenum amd_float_denorm_mode_t::UInt32 begin
    AMD_FLOAT_DENORM_MODE_FLUSH_SOURCE_OUTPUT = 0
    AMD_FLOAT_DENORM_MODE_FLUSH_OUTPUT = 1
    AMD_FLOAT_DENORM_MODE_FLUSH_SOURCE = 2
    AMD_FLOAT_DENORM_MODE_NO_FLUSH = 3
end


const amd_compute_pgm_rsrc_one32_t = UInt32

@cenum amd_compute_pgm_rsrc_one_t::Int32 begin
    AMD_COMPUTE_PGM_RSRC_ONE_GRANULATED_WORKITEM_VGPR_COUNT_SHIFT = 0
    AMD_COMPUTE_PGM_RSRC_ONE_GRANULATED_WORKITEM_VGPR_COUNT_WIDTH = 6
    AMD_COMPUTE_PGM_RSRC_ONE_GRANULATED_WORKITEM_VGPR_COUNT = 63
    AMD_COMPUTE_PGM_RSRC_ONE_GRANULATED_WAVEFRONT_SGPR_COUNT_SHIFT = 6
    AMD_COMPUTE_PGM_RSRC_ONE_GRANULATED_WAVEFRONT_SGPR_COUNT_WIDTH = 4
    AMD_COMPUTE_PGM_RSRC_ONE_GRANULATED_WAVEFRONT_SGPR_COUNT = 960
    AMD_COMPUTE_PGM_RSRC_ONE_PRIORITY_SHIFT = 10
    AMD_COMPUTE_PGM_RSRC_ONE_PRIORITY_WIDTH = 2
    AMD_COMPUTE_PGM_RSRC_ONE_PRIORITY = 3072
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_ROUND_MODE_32_SHIFT = 12
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_ROUND_MODE_32_WIDTH = 2
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_ROUND_MODE_32 = 12288
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_ROUND_MODE_16_64_SHIFT = 14
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_ROUND_MODE_16_64_WIDTH = 2
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_ROUND_MODE_16_64 = 49152
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_DENORM_MODE_32_SHIFT = 16
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_DENORM_MODE_32_WIDTH = 2
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_DENORM_MODE_32 = 196608
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_DENORM_MODE_16_64_SHIFT = 18
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_DENORM_MODE_16_64_WIDTH = 2
    AMD_COMPUTE_PGM_RSRC_ONE_FLOAT_DENORM_MODE_16_64 = 786432
    AMD_COMPUTE_PGM_RSRC_ONE_PRIV_SHIFT = 20
    AMD_COMPUTE_PGM_RSRC_ONE_PRIV_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_ONE_PRIV = 1048576
    AMD_COMPUTE_PGM_RSRC_ONE_ENABLE_DX10_CLAMP_SHIFT = 21
    AMD_COMPUTE_PGM_RSRC_ONE_ENABLE_DX10_CLAMP_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_ONE_ENABLE_DX10_CLAMP = 2097152
    AMD_COMPUTE_PGM_RSRC_ONE_DEBUG_MODE_SHIFT = 22
    AMD_COMPUTE_PGM_RSRC_ONE_DEBUG_MODE_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_ONE_DEBUG_MODE = 4194304
    AMD_COMPUTE_PGM_RSRC_ONE_ENABLE_IEEE_MODE_SHIFT = 23
    AMD_COMPUTE_PGM_RSRC_ONE_ENABLE_IEEE_MODE_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_ONE_ENABLE_IEEE_MODE = 8388608
    AMD_COMPUTE_PGM_RSRC_ONE_BULKY_SHIFT = 24
    AMD_COMPUTE_PGM_RSRC_ONE_BULKY_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_ONE_BULKY = 16777216
    AMD_COMPUTE_PGM_RSRC_ONE_CDBG_USER_SHIFT = 25
    AMD_COMPUTE_PGM_RSRC_ONE_CDBG_USER_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_ONE_CDBG_USER = 33554432
    AMD_COMPUTE_PGM_RSRC_ONE_RESERVED1_SHIFT = 26
    AMD_COMPUTE_PGM_RSRC_ONE_RESERVED1_WIDTH = 6
    AMD_COMPUTE_PGM_RSRC_ONE_RESERVED1 = -67108864
end

@cenum amd_system_vgpr_workitem_id_t::UInt32 begin
    AMD_SYSTEM_VGPR_WORKITEM_ID_X = 0
    AMD_SYSTEM_VGPR_WORKITEM_ID_X_Y = 1
    AMD_SYSTEM_VGPR_WORKITEM_ID_X_Y_Z = 2
    AMD_SYSTEM_VGPR_WORKITEM_ID_UNDEFINED = 3
end


const amd_compute_pgm_rsrc_two32_t = UInt32

@cenum amd_compute_pgm_rsrc_two_t::Int32 begin
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_PRIVATE_SEGMENT_WAVE_BYTE_OFFSET_SHIFT = 0
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_PRIVATE_SEGMENT_WAVE_BYTE_OFFSET_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_PRIVATE_SEGMENT_WAVE_BYTE_OFFSET = 1
    AMD_COMPUTE_PGM_RSRC_TWO_USER_SGPR_COUNT_SHIFT = 1
    AMD_COMPUTE_PGM_RSRC_TWO_USER_SGPR_COUNT_WIDTH = 5
    AMD_COMPUTE_PGM_RSRC_TWO_USER_SGPR_COUNT = 62
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_TRAP_HANDLER_SHIFT = 6
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_TRAP_HANDLER_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_TRAP_HANDLER = 64
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_ID_X_SHIFT = 7
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_ID_X_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_ID_X = 128
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_ID_Y_SHIFT = 8
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_ID_Y_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_ID_Y = 256
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_ID_Z_SHIFT = 9
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_ID_Z_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_ID_Z = 512
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_INFO_SHIFT = 10
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_INFO_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_SGPR_WORKGROUP_INFO = 1024
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_VGPR_WORKITEM_ID_SHIFT = 11
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_VGPR_WORKITEM_ID_WIDTH = 2
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_VGPR_WORKITEM_ID = 6144
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_ADDRESS_WATCH_SHIFT = 13
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_ADDRESS_WATCH_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_ADDRESS_WATCH = 8192
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_MEMORY_VIOLATION_SHIFT = 14
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_MEMORY_VIOLATION_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_MEMORY_VIOLATION = 16384
    AMD_COMPUTE_PGM_RSRC_TWO_GRANULATED_LDS_SIZE_SHIFT = 15
    AMD_COMPUTE_PGM_RSRC_TWO_GRANULATED_LDS_SIZE_WIDTH = 9
    AMD_COMPUTE_PGM_RSRC_TWO_GRANULATED_LDS_SIZE = 16744448
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_INVALID_OPERATION_SHIFT = 24
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_INVALID_OPERATION_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_INVALID_OPERATION = 16777216
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_FP_DENORMAL_SOURCE_SHIFT = 25
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_FP_DENORMAL_SOURCE_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_FP_DENORMAL_SOURCE = 33554432
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_DIVISION_BY_ZERO_SHIFT = 26
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_DIVISION_BY_ZERO_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_DIVISION_BY_ZERO = 67108864
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_OVERFLOW_SHIFT = 27
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_OVERFLOW_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_OVERFLOW = 134217728
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_UNDERFLOW_SHIFT = 28
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_UNDERFLOW_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_UNDERFLOW = 268435456
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_INEXACT_SHIFT = 29
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_INEXACT_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_IEEE_754_FP_INEXACT = 536870912
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_INT_DIVISION_BY_ZERO_SHIFT = 30
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_INT_DIVISION_BY_ZERO_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_ENABLE_EXCEPTION_INT_DIVISION_BY_ZERO = 1073741824
    AMD_COMPUTE_PGM_RSRC_TWO_RESERVED1_SHIFT = 31
    AMD_COMPUTE_PGM_RSRC_TWO_RESERVED1_WIDTH = 1
    AMD_COMPUTE_PGM_RSRC_TWO_RESERVED1 = -2147483648
end

@cenum amd_element_byte_size_t::UInt32 begin
    AMD_ELEMENT_BYTE_SIZE_2 = 0
    AMD_ELEMENT_BYTE_SIZE_4 = 1
    AMD_ELEMENT_BYTE_SIZE_8 = 2
    AMD_ELEMENT_BYTE_SIZE_16 = 3
end


const amd_kernel_code_properties32_t = UInt32

@cenum amd_kernel_code_properties_t::Int32 begin
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER_SHIFT = 0
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_PRIVATE_SEGMENT_BUFFER = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_DISPATCH_PTR_SHIFT = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_DISPATCH_PTR_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_DISPATCH_PTR = 2
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_QUEUE_PTR_SHIFT = 2
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_QUEUE_PTR_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_QUEUE_PTR = 4
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_KERNARG_SEGMENT_PTR_SHIFT = 3
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_KERNARG_SEGMENT_PTR_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_KERNARG_SEGMENT_PTR = 8
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_DISPATCH_ID_SHIFT = 4
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_DISPATCH_ID_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_DISPATCH_ID = 16
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_FLAT_SCRATCH_INIT_SHIFT = 5
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_FLAT_SCRATCH_INIT_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_FLAT_SCRATCH_INIT = 32
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_PRIVATE_SEGMENT_SIZE_SHIFT = 6
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_PRIVATE_SEGMENT_SIZE_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_PRIVATE_SEGMENT_SIZE = 64
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_GRID_WORKGROUP_COUNT_X_SHIFT = 7
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_GRID_WORKGROUP_COUNT_X_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_GRID_WORKGROUP_COUNT_X = 128
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Y_SHIFT = 8
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Y_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Y = 256
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Z_SHIFT = 9
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Z_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_SGPR_GRID_WORKGROUP_COUNT_Z = 512
    AMD_KERNEL_CODE_PROPERTIES_RESERVED1_SHIFT = 10
    AMD_KERNEL_CODE_PROPERTIES_RESERVED1_WIDTH = 6
    AMD_KERNEL_CODE_PROPERTIES_RESERVED1 = 64512
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_ORDERED_APPEND_GDS_SHIFT = 16
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_ORDERED_APPEND_GDS_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_ENABLE_ORDERED_APPEND_GDS = 65536
    AMD_KERNEL_CODE_PROPERTIES_PRIVATE_ELEMENT_SIZE_SHIFT = 17
    AMD_KERNEL_CODE_PROPERTIES_PRIVATE_ELEMENT_SIZE_WIDTH = 2
    AMD_KERNEL_CODE_PROPERTIES_PRIVATE_ELEMENT_SIZE = 393216
    AMD_KERNEL_CODE_PROPERTIES_IS_PTR64_SHIFT = 19
    AMD_KERNEL_CODE_PROPERTIES_IS_PTR64_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_IS_PTR64 = 524288
    AMD_KERNEL_CODE_PROPERTIES_IS_DYNAMIC_CALLSTACK_SHIFT = 20
    AMD_KERNEL_CODE_PROPERTIES_IS_DYNAMIC_CALLSTACK_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_IS_DYNAMIC_CALLSTACK = 1048576
    AMD_KERNEL_CODE_PROPERTIES_IS_DEBUG_ENABLED_SHIFT = 21
    AMD_KERNEL_CODE_PROPERTIES_IS_DEBUG_ENABLED_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_IS_DEBUG_ENABLED = 2097152
    AMD_KERNEL_CODE_PROPERTIES_IS_XNACK_ENABLED_SHIFT = 22
    AMD_KERNEL_CODE_PROPERTIES_IS_XNACK_ENABLED_WIDTH = 1
    AMD_KERNEL_CODE_PROPERTIES_IS_XNACK_ENABLED = 4194304
    AMD_KERNEL_CODE_PROPERTIES_RESERVED2_SHIFT = 23
    AMD_KERNEL_CODE_PROPERTIES_RESERVED2_WIDTH = 9
    AMD_KERNEL_CODE_PROPERTIES_RESERVED2 = -8388608
end


const amd_powertwo8_t = UInt8

@cenum amd_powertwo_t::UInt32 begin
    AMD_POWERTWO_1 = 0
    AMD_POWERTWO_2 = 1
    AMD_POWERTWO_4 = 2
    AMD_POWERTWO_8 = 3
    AMD_POWERTWO_16 = 4
    AMD_POWERTWO_32 = 5
    AMD_POWERTWO_64 = 6
    AMD_POWERTWO_128 = 7
    AMD_POWERTWO_256 = 8
end


const amd_enabled_control_directive64_t = UInt64

@cenum amd_enabled_control_directive_t::UInt32 begin
    AMD_ENABLED_CONTROL_DIRECTIVE_ENABLE_BREAK_EXCEPTIONS = 1
    AMD_ENABLED_CONTROL_DIRECTIVE_ENABLE_DETECT_EXCEPTIONS = 2
    AMD_ENABLED_CONTROL_DIRECTIVE_MAX_DYNAMIC_GROUP_SIZE = 4
    AMD_ENABLED_CONTROL_DIRECTIVE_MAX_FLAT_GRID_SIZE = 8
    AMD_ENABLED_CONTROL_DIRECTIVE_MAX_FLAT_WORKGROUP_SIZE = 16
    AMD_ENABLED_CONTROL_DIRECTIVE_REQUIRED_DIM = 32
    AMD_ENABLED_CONTROL_DIRECTIVE_REQUIRED_GRID_SIZE = 64
    AMD_ENABLED_CONTROL_DIRECTIVE_REQUIRED_WORKGROUP_SIZE = 128
    AMD_ENABLED_CONTROL_DIRECTIVE_REQUIRE_NO_PARTIAL_WORKGROUPS = 256
end


const amd_exception_kind16_t = UInt16

@cenum amd_exception_kind_t::UInt32 begin
    AMD_EXCEPTION_KIND_INVALID_OPERATION = 1
    AMD_EXCEPTION_KIND_DIVISION_BY_ZERO = 2
    AMD_EXCEPTION_KIND_OVERFLOW = 4
    AMD_EXCEPTION_KIND_UNDERFLOW = 8
    AMD_EXCEPTION_KIND_INEXACT = 16
end


struct amd_control_directives_s
    enabled_control_directives::amd_enabled_control_directive64_t
    enable_break_exceptions::UInt16
    enable_detect_exceptions::UInt16
    max_dynamic_group_size::UInt32
    max_flat_grid_size::UInt64
    max_flat_workgroup_size::UInt32
    required_dim::UInt8
    reserved1::NTuple{3, UInt8}
    required_grid_size::NTuple{3, UInt64}
    required_workgroup_size::NTuple{3, UInt32}
    reserved2::NTuple{60, UInt8}
end

const amd_control_directives_t = amd_control_directives_s

struct amd_kernel_code_s
    amd_kernel_code_version_major::amd_kernel_code_version32_t
    amd_kernel_code_version_minor::amd_kernel_code_version32_t
    amd_machine_kind::amd_machine_kind16_t
    amd_machine_version_major::amd_machine_version16_t
    amd_machine_version_minor::amd_machine_version16_t
    amd_machine_version_stepping::amd_machine_version16_t
    kernel_code_entry_byte_offset::Int64
    kernel_code_prefetch_byte_offset::Int64
    kernel_code_prefetch_byte_size::UInt64
    max_scratch_backing_memory_byte_size::UInt64
    compute_pgm_rsrc1::amd_compute_pgm_rsrc_one32_t
    compute_pgm_rsrc2::amd_compute_pgm_rsrc_two32_t
    kernel_code_properties::amd_kernel_code_properties32_t
    workitem_private_segment_byte_size::UInt32
    workgroup_group_segment_byte_size::UInt32
    gds_segment_byte_size::UInt32
    kernarg_segment_byte_size::UInt64
    workgroup_fbarrier_count::UInt32
    wavefront_sgpr_count::UInt16
    workitem_vgpr_count::UInt16
    reserved_vgpr_first::UInt16
    reserved_vgpr_count::UInt16
    reserved_sgpr_first::UInt16
    reserved_sgpr_count::UInt16
    debug_wavefront_private_segment_offset_sgpr::UInt16
    debug_private_segment_buffer_sgpr::UInt16
    kernarg_segment_alignment::amd_powertwo8_t
    group_segment_alignment::amd_powertwo8_t
    private_segment_alignment::amd_powertwo8_t
    wavefront_size::amd_powertwo8_t
    call_convention::Int32
    reserved1::NTuple{12, UInt8}
    runtime_loader_kernel_symbol::UInt64
    control_directives::amd_control_directives_t
end

const amd_kernel_code_t = amd_kernel_code_s

struct amd_runtime_loader_debug_info_s
    elf_raw::Ptr{Cvoid}
    elf_size::Csize_t
    kernel_name::Cstring
    owning_segment::Ptr{Cvoid}
end

const amd_runtime_loader_debug_info_t = amd_runtime_loader_debug_info_s
const AMD_QUEUE_ALIGN_BYTES = 64

# Skipping MacroDefinition: AMD_QUEUE_ALIGN __ALIGNED__ ( AMD_QUEUE_ALIGN_BYTES )

const amd_queue_properties32_t = UInt32

@cenum amd_queue_properties_t::Int32 begin
    AMD_QUEUE_PROPERTIES_ENABLE_TRAP_HANDLER_SHIFT = 0
    AMD_QUEUE_PROPERTIES_ENABLE_TRAP_HANDLER_WIDTH = 1
    AMD_QUEUE_PROPERTIES_ENABLE_TRAP_HANDLER = 1
    AMD_QUEUE_PROPERTIES_IS_PTR64_SHIFT = 1
    AMD_QUEUE_PROPERTIES_IS_PTR64_WIDTH = 1
    AMD_QUEUE_PROPERTIES_IS_PTR64 = 2
    AMD_QUEUE_PROPERTIES_ENABLE_TRAP_HANDLER_DEBUG_SGPRS_SHIFT = 2
    AMD_QUEUE_PROPERTIES_ENABLE_TRAP_HANDLER_DEBUG_SGPRS_WIDTH = 1
    AMD_QUEUE_PROPERTIES_ENABLE_TRAP_HANDLER_DEBUG_SGPRS = 4
    AMD_QUEUE_PROPERTIES_ENABLE_PROFILING_SHIFT = 3
    AMD_QUEUE_PROPERTIES_ENABLE_PROFILING_WIDTH = 1
    AMD_QUEUE_PROPERTIES_ENABLE_PROFILING = 8
    AMD_QUEUE_PROPERTIES_USE_SCRATCH_ONCE_SHIFT = 4
    AMD_QUEUE_PROPERTIES_USE_SCRATCH_ONCE_WIDTH = 1
    AMD_QUEUE_PROPERTIES_USE_SCRATCH_ONCE = 16
    AMD_QUEUE_PROPERTIES_RESERVED1_SHIFT = 5
    AMD_QUEUE_PROPERTIES_RESERVED1_WIDTH = 27
    AMD_QUEUE_PROPERTIES_RESERVED1 = -32
end


struct amd_queue_s
    hsa_queue::hsa_queue_t
    reserved1::NTuple{4, UInt32}
    write_dispatch_id::UInt64
    group_segment_aperture_base_hi::UInt32
    private_segment_aperture_base_hi::UInt32
    max_cu_id::UInt32
    max_wave_id::UInt32
    max_legacy_doorbell_dispatch_id_plus_1::UInt64
    legacy_doorbell_lock::UInt32
    reserved2::NTuple{9, UInt32}
    read_dispatch_id::UInt64
    read_dispatch_id_field_base_byte_offset::UInt32
    compute_tmpring_size::UInt32
    scratch_resource_descriptor::NTuple{4, UInt32}
    scratch_backing_memory_location::UInt64
    scratch_backing_memory_byte_size::UInt64
    scratch_wave64_lane_byte_size::UInt32
    queue_properties::amd_queue_properties32_t
    reserved3::NTuple{2, UInt32}
    queue_inactive_signal::hsa_signal_t
    reserved4::NTuple{14, UInt32}
end

const amd_queue_t = amd_queue_s
const AMD_SIGNAL_ALIGN_BYTES = 64

# Skipping MacroDefinition: AMD_SIGNAL_ALIGN __ALIGNED__ ( AMD_SIGNAL_ALIGN_BYTES )

const amd_signal_kind64_t = Int64

@cenum amd_signal_kind_t::Int32 begin
    AMD_SIGNAL_KIND_INVALID = 0
    AMD_SIGNAL_KIND_USER = 1
    AMD_SIGNAL_KIND_DOORBELL = -1
    AMD_SIGNAL_KIND_LEGACY_DOORBELL = -2
end


struct amd_signal_s
    kind::amd_signal_kind64_t
    event_mailbox_ptr::UInt64
    event_id::UInt32
    reserved1::UInt32
    start_ts::UInt64
    end_ts::UInt64
    reserved3::NTuple{2, UInt32}
end

const amd_signal_t = amd_signal_s

# Skipping MacroDefinition: assert ( expr ) ( ( void ) sizeof ( ( expr ) ? 1 : 0 ) , __extension__ ( { if ( expr ) ; /* empty */ else __assert_fail ( # expr , __FILE__ , __LINE__ , __ASSERT_FUNCTION ) ; } ) )

const HSA_API_TABLE_MAJOR_VERSION = 0x01
const HSA_CORE_API_TABLE_MAJOR_VERSION = 0x01
const HSA_AMD_EXT_API_TABLE_MAJOR_VERSION = 0x01
const HSA_FINALIZER_API_TABLE_MAJOR_VERSION = 0x01
const HSA_IMAGE_API_TABLE_MAJOR_VERSION = 0x01
const HSA_AQLPROFILE_API_TABLE_MAJOR_VERSION = 0x01
const HSA_API_TABLE_STEP_VERSION = 0x00
const HSA_CORE_API_TABLE_STEP_VERSION = 0x00
const HSA_AMD_EXT_API_TABLE_STEP_VERSION = 0x00
const HSA_FINALIZER_API_TABLE_STEP_VERSION = 0x00
const HSA_IMAGE_API_TABLE_STEP_VERSION = 0x00
const HSA_AQLPROFILE_API_TABLE_STEP_VERSION = 0x00
const locale_t = __locale_t
const hsa_amd_queue_intercept_packet_writer = Ptr{Cvoid}
const hsa_amd_queue_intercept_handler = Ptr{Cvoid}
const hsa_amd_runtime_queue_notifier = Ptr{Cvoid}

struct ApiTableVersion
    major_id::UInt32
    minor_id::UInt32
    step_id::UInt32
    reserved::UInt32
end

struct HsaApiTable
    version::ApiTableVersion
    core_::Ptr{CoreApiTable}
    amd_ext_::Ptr{AmdExtTable}
    finalizer_ext_::Ptr{FinalizerExtTable}
    image_ext_::Ptr{ImageExtTable}
end

const HSA_AMD_INTERFACE_VERSION_MAJOR = 1
const HSA_AMD_INTERFACE_VERSION_MINOR = 0

struct hsa_ext_image_s
    handle::UInt64
end

const hsa_ext_image_t = hsa_ext_image_s

@cenum hsa_ext_image_geometry_t::UInt32 begin
    HSA_EXT_IMAGE_GEOMETRY_1D = 0
    HSA_EXT_IMAGE_GEOMETRY_2D = 1
    HSA_EXT_IMAGE_GEOMETRY_3D = 2
    HSA_EXT_IMAGE_GEOMETRY_1DA = 3
    HSA_EXT_IMAGE_GEOMETRY_2DA = 4
    HSA_EXT_IMAGE_GEOMETRY_1DB = 5
    HSA_EXT_IMAGE_GEOMETRY_2DDEPTH = 6
    HSA_EXT_IMAGE_GEOMETRY_2DADEPTH = 7
end

@cenum hsa_ext_image_channel_type_t::UInt32 begin
    HSA_EXT_IMAGE_CHANNEL_TYPE_SNORM_INT8 = 0
    HSA_EXT_IMAGE_CHANNEL_TYPE_SNORM_INT16 = 1
    HSA_EXT_IMAGE_CHANNEL_TYPE_UNORM_INT8 = 2
    HSA_EXT_IMAGE_CHANNEL_TYPE_UNORM_INT16 = 3
    HSA_EXT_IMAGE_CHANNEL_TYPE_UNORM_INT24 = 4
    HSA_EXT_IMAGE_CHANNEL_TYPE_UNORM_SHORT_555 = 5
    HSA_EXT_IMAGE_CHANNEL_TYPE_UNORM_SHORT_565 = 6
    HSA_EXT_IMAGE_CHANNEL_TYPE_UNORM_SHORT_101010 = 7
    HSA_EXT_IMAGE_CHANNEL_TYPE_SIGNED_INT8 = 8
    HSA_EXT_IMAGE_CHANNEL_TYPE_SIGNED_INT16 = 9
    HSA_EXT_IMAGE_CHANNEL_TYPE_SIGNED_INT32 = 10
    HSA_EXT_IMAGE_CHANNEL_TYPE_UNSIGNED_INT8 = 11
    HSA_EXT_IMAGE_CHANNEL_TYPE_UNSIGNED_INT16 = 12
    HSA_EXT_IMAGE_CHANNEL_TYPE_UNSIGNED_INT32 = 13
    HSA_EXT_IMAGE_CHANNEL_TYPE_HALF_FLOAT = 14
    HSA_EXT_IMAGE_CHANNEL_TYPE_FLOAT = 15
end


const hsa_ext_image_channel_type32_t = UInt32

@cenum hsa_ext_image_channel_order_t::UInt32 begin
    HSA_EXT_IMAGE_CHANNEL_ORDER_A = 0
    HSA_EXT_IMAGE_CHANNEL_ORDER_R = 1
    HSA_EXT_IMAGE_CHANNEL_ORDER_RX = 2
    HSA_EXT_IMAGE_CHANNEL_ORDER_RG = 3
    HSA_EXT_IMAGE_CHANNEL_ORDER_RGX = 4
    HSA_EXT_IMAGE_CHANNEL_ORDER_RA = 5
    HSA_EXT_IMAGE_CHANNEL_ORDER_RGB = 6
    HSA_EXT_IMAGE_CHANNEL_ORDER_RGBX = 7
    HSA_EXT_IMAGE_CHANNEL_ORDER_RGBA = 8
    HSA_EXT_IMAGE_CHANNEL_ORDER_BGRA = 9
    HSA_EXT_IMAGE_CHANNEL_ORDER_ARGB = 10
    HSA_EXT_IMAGE_CHANNEL_ORDER_ABGR = 11
    HSA_EXT_IMAGE_CHANNEL_ORDER_SRGB = 12
    HSA_EXT_IMAGE_CHANNEL_ORDER_SRGBX = 13
    HSA_EXT_IMAGE_CHANNEL_ORDER_SRGBA = 14
    HSA_EXT_IMAGE_CHANNEL_ORDER_SBGRA = 15
    HSA_EXT_IMAGE_CHANNEL_ORDER_INTENSITY = 16
    HSA_EXT_IMAGE_CHANNEL_ORDER_LUMINANCE = 17
    HSA_EXT_IMAGE_CHANNEL_ORDER_DEPTH = 18
    HSA_EXT_IMAGE_CHANNEL_ORDER_DEPTH_STENCIL = 19
end


const hsa_ext_image_channel_order32_t = UInt32

struct hsa_ext_image_format_s
    channel_type::hsa_ext_image_channel_type32_t
    channel_order::hsa_ext_image_channel_order32_t
end

const hsa_ext_image_format_t = hsa_ext_image_format_s

struct hsa_ext_image_descriptor_s
    geometry::hsa_ext_image_geometry_t
    width::Csize_t
    height::Csize_t
    depth::Csize_t
    array_size::Csize_t
    format::hsa_ext_image_format_t
end

const hsa_ext_image_descriptor_t = hsa_ext_image_descriptor_s

@cenum hsa_ext_image_capability_t::UInt32 begin
    HSA_EXT_IMAGE_CAPABILITY_NOT_SUPPORTED = 0
    HSA_EXT_IMAGE_CAPABILITY_READ_ONLY = 1
    HSA_EXT_IMAGE_CAPABILITY_WRITE_ONLY = 2
    HSA_EXT_IMAGE_CAPABILITY_READ_WRITE = 4
    HSA_EXT_IMAGE_CAPABILITY_READ_MODIFY_WRITE = 8
    HSA_EXT_IMAGE_CAPABILITY_ACCESS_INVARIANT_DATA_LAYOUT = 16
end

@cenum hsa_ext_image_data_layout_t::UInt32 begin
    HSA_EXT_IMAGE_DATA_LAYOUT_OPAQUE = 0
    HSA_EXT_IMAGE_DATA_LAYOUT_LINEAR = 1
end


struct hsa_ext_image_data_info_s
    size::Csize_t
    alignment::Csize_t
end

const hsa_ext_image_data_info_t = hsa_ext_image_data_info_s

struct hsa_ext_image_region_s
    offset::hsa_dim3_t
    range::hsa_dim3_t
end

const hsa_ext_image_region_t = hsa_ext_image_region_s

struct hsa_ext_sampler_s
    handle::UInt64
end

const hsa_ext_sampler_t = hsa_ext_sampler_s

@cenum hsa_ext_sampler_addressing_mode_t::UInt32 begin
    HSA_EXT_SAMPLER_ADDRESSING_MODE_UNDEFINED = 0
    HSA_EXT_SAMPLER_ADDRESSING_MODE_CLAMP_TO_EDGE = 1
    HSA_EXT_SAMPLER_ADDRESSING_MODE_CLAMP_TO_BORDER = 2
    HSA_EXT_SAMPLER_ADDRESSING_MODE_REPEAT = 3
    HSA_EXT_SAMPLER_ADDRESSING_MODE_MIRRORED_REPEAT = 4
end


const hsa_ext_sampler_addressing_mode32_t = UInt32

@cenum hsa_ext_sampler_coordinate_mode_t::UInt32 begin
    HSA_EXT_SAMPLER_COORDINATE_MODE_UNNORMALIZED = 0
    HSA_EXT_SAMPLER_COORDINATE_MODE_NORMALIZED = 1
end


const hsa_ext_sampler_coordinate_mode32_t = UInt32

@cenum hsa_ext_sampler_filter_mode_t::UInt32 begin
    HSA_EXT_SAMPLER_FILTER_MODE_NEAREST = 0
    HSA_EXT_SAMPLER_FILTER_MODE_LINEAR = 1
end


const hsa_ext_sampler_filter_mode32_t = UInt32

struct hsa_ext_sampler_descriptor_s
    coordinate_mode::hsa_ext_sampler_coordinate_mode32_t
    filter_mode::hsa_ext_sampler_filter_mode32_t
    address_mode::hsa_ext_sampler_addressing_mode32_t
end

const hsa_ext_sampler_descriptor_t = hsa_ext_sampler_descriptor_s

struct hsa_ext_images_1_00_pfn_s
    hsa_ext_image_get_capability::Ptr{Cvoid}
    hsa_ext_image_data_get_info::Ptr{Cvoid}
    hsa_ext_image_create::Ptr{Cvoid}
    hsa_ext_image_destroy::Ptr{Cvoid}
    hsa_ext_image_copy::Ptr{Cvoid}
    hsa_ext_image_import::Ptr{Cvoid}
    hsa_ext_image_export::Ptr{Cvoid}
    hsa_ext_image_clear::Ptr{Cvoid}
    hsa_ext_sampler_create::Ptr{Cvoid}
    hsa_ext_sampler_destroy::Ptr{Cvoid}
end

const hsa_ext_images_1_00_pfn_t = hsa_ext_images_1_00_pfn_s

struct hsa_ext_images_1_pfn_s
    hsa_ext_image_get_capability::Ptr{Cvoid}
    hsa_ext_image_data_get_info::Ptr{Cvoid}
    hsa_ext_image_create::Ptr{Cvoid}
    hsa_ext_image_destroy::Ptr{Cvoid}
    hsa_ext_image_copy::Ptr{Cvoid}
    hsa_ext_image_import::Ptr{Cvoid}
    hsa_ext_image_export::Ptr{Cvoid}
    hsa_ext_image_clear::Ptr{Cvoid}
    hsa_ext_sampler_create::Ptr{Cvoid}
    hsa_ext_sampler_destroy::Ptr{Cvoid}
    hsa_ext_image_get_capability_with_layout::Ptr{Cvoid}
    hsa_ext_image_data_get_info_with_layout::Ptr{Cvoid}
    hsa_ext_image_create_with_layout::Ptr{Cvoid}
end

const hsa_ext_images_1_pfn_t = hsa_ext_images_1_pfn_s

@cenum hsa_amd_agent_info_s::UInt32 begin
    HSA_AMD_AGENT_INFO_CHIP_ID = 40960
    HSA_AMD_AGENT_INFO_CACHELINE_SIZE = 40961
    HSA_AMD_AGENT_INFO_COMPUTE_UNIT_COUNT = 40962
    HSA_AMD_AGENT_INFO_MAX_CLOCK_FREQUENCY = 40963
    HSA_AMD_AGENT_INFO_DRIVER_NODE_ID = 40964
    HSA_AMD_AGENT_INFO_MAX_ADDRESS_WATCH_POINTS = 40965
    HSA_AMD_AGENT_INFO_BDFID = 40966
    HSA_AMD_AGENT_INFO_MEMORY_WIDTH = 40967
    HSA_AMD_AGENT_INFO_MEMORY_MAX_FREQUENCY = 40968
    HSA_AMD_AGENT_INFO_PRODUCT_NAME = 40969
    HSA_AMD_AGENT_INFO_MAX_WAVES_PER_CU = 40970
    HSA_AMD_AGENT_INFO_NUM_SIMDS_PER_CU = 40971
    HSA_AMD_AGENT_INFO_NUM_SHADER_ENGINES = 40972
    HSA_AMD_AGENT_INFO_NUM_SHADER_ARRAYS_PER_SE = 40973
    HSA_AMD_AGENT_INFO_HDP_FLUSH = 40974
    HSA_AMD_AGENT_INFO_DOMAIN = 40975
end


const hsa_amd_agent_info_t = hsa_amd_agent_info_s

struct hsa_amd_hdp_flush_s
    HDP_MEM_FLUSH_CNTL::Ptr{UInt32}
    HDP_REG_FLUSH_CNTL::Ptr{UInt32}
end

const hsa_amd_hdp_flush_t = hsa_amd_hdp_flush_s

@cenum hsa_amd_region_info_s::UInt32 begin
    HSA_AMD_REGION_INFO_HOST_ACCESSIBLE = 40960
    HSA_AMD_REGION_INFO_BASE = 40961
    HSA_AMD_REGION_INFO_BUS_WIDTH = 40962
    HSA_AMD_REGION_INFO_MAX_CLOCK_FREQUENCY = 40963
end


const hsa_amd_region_info_t = hsa_amd_region_info_s

@cenum hsa_amd_coherency_type_s::UInt32 begin
    HSA_AMD_COHERENCY_TYPE_COHERENT = 0
    HSA_AMD_COHERENCY_TYPE_NONCOHERENT = 1
end


const hsa_amd_coherency_type_t = hsa_amd_coherency_type_s

struct hsa_amd_profiling_dispatch_time_s
    start::UInt64
    _end::UInt64
end

const hsa_amd_profiling_dispatch_time_t = hsa_amd_profiling_dispatch_time_s

struct hsa_amd_profiling_async_copy_time_s
    start::UInt64
    _end::UInt64
end

const hsa_amd_profiling_async_copy_time_t = hsa_amd_profiling_async_copy_time_s

@cenum hsa_amd_signal_attribute_t::UInt32 begin
    HSA_AMD_SIGNAL_AMD_GPU_ONLY = 1
    HSA_AMD_SIGNAL_IPC = 2
end


const hsa_amd_signal_handler = Ptr{Cvoid}

@cenum hsa_amd_segment_t::UInt32 begin
    HSA_AMD_SEGMENT_GLOBAL = 0
    HSA_AMD_SEGMENT_READONLY = 1
    HSA_AMD_SEGMENT_PRIVATE = 2
    HSA_AMD_SEGMENT_GROUP = 3
end


struct hsa_amd_memory_pool_s
    handle::UInt64
end

const hsa_amd_memory_pool_t = hsa_amd_memory_pool_s

@cenum hsa_amd_memory_pool_global_flag_s::UInt32 begin
    HSA_AMD_MEMORY_POOL_GLOBAL_FLAG_KERNARG_INIT = 1
    HSA_AMD_MEMORY_POOL_GLOBAL_FLAG_FINE_GRAINED = 2
    HSA_AMD_MEMORY_POOL_GLOBAL_FLAG_COARSE_GRAINED = 4
end


const hsa_amd_memory_pool_global_flag_t = hsa_amd_memory_pool_global_flag_s

@cenum hsa_amd_memory_pool_info_t::UInt32 begin
    HSA_AMD_MEMORY_POOL_INFO_SEGMENT = 0
    HSA_AMD_MEMORY_POOL_INFO_GLOBAL_FLAGS = 1
    HSA_AMD_MEMORY_POOL_INFO_SIZE = 2
    HSA_AMD_MEMORY_POOL_INFO_RUNTIME_ALLOC_ALLOWED = 5
    HSA_AMD_MEMORY_POOL_INFO_RUNTIME_ALLOC_GRANULE = 6
    HSA_AMD_MEMORY_POOL_INFO_RUNTIME_ALLOC_ALIGNMENT = 7
    HSA_AMD_MEMORY_POOL_INFO_ACCESSIBLE_BY_ALL = 15
    HSA_AMD_MEMORY_POOL_INFO_ALLOC_MAX_SIZE = 16
end


struct hsa_pitched_ptr_s
    base::Ptr{Cvoid}
    pitch::Csize_t
    slice::Csize_t
end

const hsa_pitched_ptr_t = hsa_pitched_ptr_s

@cenum hsa_amd_copy_direction_t::UInt32 begin
    hsaHostToHost = 0
    hsaHostToDevice = 1
    hsaDeviceToHost = 2
    hsaDeviceToDevice = 3
end

@cenum hsa_amd_memory_pool_access_t::UInt32 begin
    HSA_AMD_MEMORY_POOL_ACCESS_NEVER_ALLOWED = 0
    HSA_AMD_MEMORY_POOL_ACCESS_ALLOWED_BY_DEFAULT = 1
    HSA_AMD_MEMORY_POOL_ACCESS_DISALLOWED_BY_DEFAULT = 2
end

@cenum hsa_amd_link_info_type_t::UInt32 begin
    HSA_AMD_LINK_INFO_TYPE_HYPERTRANSPORT = 0
    HSA_AMD_LINK_INFO_TYPE_QPI = 1
    HSA_AMD_LINK_INFO_TYPE_PCIE = 2
    HSA_AMD_LINK_INFO_TYPE_INFINBAND = 3
    HSA_AMD_LINK_INFO_TYPE_XGMI = 4
end


struct hsa_amd_memory_pool_link_info_s
    min_latency::UInt32
    max_latency::UInt32
    min_bandwidth::UInt32
    max_bandwidth::UInt32
    atomic_support_32bit::Bool
    atomic_support_64bit::Bool
    coherent_support::Bool
    link_type::hsa_amd_link_info_type_t
    numa_distance::UInt32
end

const hsa_amd_memory_pool_link_info_t = hsa_amd_memory_pool_link_info_s

@cenum hsa_amd_agent_memory_pool_info_t::UInt32 begin
    HSA_AMD_AGENT_MEMORY_POOL_INFO_ACCESS = 0
    HSA_AMD_AGENT_MEMORY_POOL_INFO_NUM_LINK_HOPS = 1
    HSA_AMD_AGENT_MEMORY_POOL_INFO_LINK_INFO = 2
end


struct hsa_amd_image_descriptor_s
    version::UInt32
    deviceID::UInt32
    data::NTuple{1, UInt32}
end

const hsa_amd_image_descriptor_t = hsa_amd_image_descriptor_s

@cenum hsa_amd_pointer_type_t::UInt32 begin
    HSA_EXT_POINTER_TYPE_UNKNOWN = 0
    HSA_EXT_POINTER_TYPE_HSA = 1
    HSA_EXT_POINTER_TYPE_LOCKED = 2
    HSA_EXT_POINTER_TYPE_GRAPHICS = 3
    HSA_EXT_POINTER_TYPE_IPC = 4
end


struct hsa_amd_pointer_info_s
    size::UInt32
    type::hsa_amd_pointer_type_t
    agentBaseAddress::Ptr{Cvoid}
    hostBaseAddress::Ptr{Cvoid}
    sizeInBytes::Csize_t
    userData::Ptr{Cvoid}
    agentOwner::hsa_agent_t
end

const hsa_amd_pointer_info_t = hsa_amd_pointer_info_s

struct hsa_amd_ipc_memory_s
    handle::NTuple{8, UInt32}
end

const hsa_amd_ipc_memory_t = hsa_amd_ipc_memory_s
const hsa_amd_ipc_signal_t = hsa_amd_ipc_memory_t

@cenum hsa_amd_event_type_s::UInt32 begin
    HSA_AMD_GPU_MEMORY_FAULT_EVENT = 0
end


const hsa_amd_event_type_t = hsa_amd_event_type_s

@cenum hsa_amd_memory_fault_reason_t::Int32 begin
    HSA_AMD_MEMORY_FAULT_PAGE_NOT_PRESENT = 1
    HSA_AMD_MEMORY_FAULT_READ_ONLY = 2
    HSA_AMD_MEMORY_FAULT_NX = 4
    HSA_AMD_MEMORY_FAULT_HOST_ONLY = 8
    HSA_AMD_MEMORY_FAULT_DRAM_ECC = 16
    HSA_AMD_MEMORY_FAULT_IMPRECISE = 32
    HSA_AMD_MEMORY_FAULT_SRAM_ECC = 64
    HSA_AMD_MEMORY_FAULT_HANG = -2147483648
end


struct hsa_amd_gpu_memory_fault_info_s
    agent::hsa_agent_t
    virtual_address::UInt64
    fault_reason_mask::UInt32
end

const hsa_amd_gpu_memory_fault_info_t = hsa_amd_gpu_memory_fault_info_s

struct hsa_amd_event_s
    event_type::hsa_amd_event_type_t
end

const hsa_amd_event_t = hsa_amd_event_s
const hsa_amd_system_event_callback_t = Ptr{Cvoid}

@cenum hsa_amd_queue_priority_s::UInt32 begin
    HSA_AMD_QUEUE_PRIORITY_LOW = 0
    HSA_AMD_QUEUE_PRIORITY_NORMAL = 1
    HSA_AMD_QUEUE_PRIORITY_HIGH = 2
end


const hsa_amd_queue_priority_t = hsa_amd_queue_priority_s
const hsa_amd_deallocation_callback_t = Ptr{Cvoid}

# Skipping MacroDefinition: HSA_TOOLS_API __attribute__ ( ( visibility ( "default" ) ) )
# Skipping MacroDefinition: DLL_LOCAL __attribute__ ( ( visibility ( "hidden" ) ) )

@cenum hsa_ext_tools_wave_action_s::UInt32 begin
    HSA_EXT_TOOLS_WAVE_ACTION_HALT = 1
    HSA_EXT_TOOLS_WAVE_ACTION_RESUME = 2
    HSA_EXT_TOOLS_WAVE_ACTION_KILL = 3
    HSA_EXT_TOOLS_WAVE_ACTION_DEBUG = 4
    HSA_EXT_TOOLS_WAVE_ACTION_TRAP = 5
    HSA_EXT_TOOLS_WAVE_ACTION_MAX = 6
end


const hsa_ext_tools_wave_action_t = hsa_ext_tools_wave_action_s

@cenum hsa_ext_tools_host_action_s::UInt32 begin
    HSA_EXT_TOOLS_HOST_ACTION_IGNORE = 1
    HSA_EXT_TOOLS_HOST_ACTION_EXIT = 2
    HSA_EXT_TOOLS_HOST_ACTION_NOTIFY = 4
end


const hsa_ext_tools_host_action_t = hsa_ext_tools_host_action_s

@cenum hsa_ext_tools_wave_mode_s::UInt32 begin
    HSA_EXT_TOOLS_WAVE_MODE_SINGLE = 0
    HSA_EXT_TOOLS_WAVE_MODE_BROADCAST_PROCESS = 2
    HSA_EXT_TOOLS_WAVE_MODE_BROADCAST_PROCESS_CU = 3
    HSA_EXT_TOOLS_WAVE_MODE_MAX = 4
end


const hsa_ext_tools_wave_mode_t = hsa_ext_tools_wave_mode_s

@cenum hsa_ext_tools_trap_type_s::UInt32 begin
    HSA_EXT_TOOLS_DEBUG_TRAP = 1
    HSA_EXT_TOOLS_MAX_TRAP = 2
end


const hsa_ext_tools_trap_type_t = hsa_ext_tools_trap_type_s

@cenum hsa_ext_tools_address_watch_mode_s::UInt32 begin
    HSA_EXT_TOOLS_ADDRESS_WATCH_READ = 0
    HSA_EXT_TOOLS_ADDRESS_WATCH_NON_READ = 1
    HSA_EXT_TOOLS_ADDRESS_WATCH_ATOMIC = 2
    HSA_EXT_TOOLS_ADDRESS_WATCH_ALL = 3
    HSA_EXT_TOOLS_ADDRESS_WATCH_NUM = 4
end


const hsa_ext_tools_address_watch_mode_t = hsa_ext_tools_address_watch_mode_s

@cenum hsa_ext_tools_event_wait_status_s::UInt32 begin
    HSA_EXT_TOOLS_EVENT_WAIT_SUCCESS = 0
    HSA_EXT_TOOLS_EVENT_WAIT_ERROR = 4096
    HSA_EXT_TOOLS_EVENT_WAIT_TIMEOUT = 81923
end


const hsa_ext_tools_event_wait_status_t = hsa_ext_tools_event_wait_status_s

struct hsa_ext_tools_exception_policy_s
    exception_mask::UInt32
    wave_action::hsa_ext_tools_wave_action_t
    host_action::hsa_ext_tools_host_action_t
    wave_mode::hsa_ext_tools_wave_mode_t
end

const hsa_ext_tools_exception_policy_t = hsa_ext_tools_exception_policy_s

struct hsa_ext_tools_dispatch_debug_info_s
    scratch_memory_descriptor::NTuple{4, UInt32}
    global_memory_descriptor::NTuple{4, UInt32}
end

const hsa_ext_tools_dispatch_debug_info_t = hsa_ext_tools_dispatch_debug_info_s

struct ANONYMOUS2_ui32
    user_data::UInt32
    shader_array::UInt32
    priv::UInt32
    vm_id::UInt32
    wave_id::UInt32
    simd::UInt32
    hsa_cu::UInt32
    shader_engine::UInt32
    message_type::UInt32
    reserved1::UInt32
end

struct ANONYMOUS1_ui32
    ui32::ANONYMOUS2_ui32
end

struct hsa_ext_tools_wave_msg_amd_gen2_s
    ui32::ANONYMOUS1_ui32
    reserved0::UInt32
end

const hsa_ext_tools_wave_msg_amd_gen2_t = hsa_ext_tools_wave_msg_amd_gen2_s

struct hsa_ext_tools_wave_control_message_s
    memory_va::Ptr{Cvoid}
end

const hsa_ext_tools_wave_control_message_t = hsa_ext_tools_wave_control_message_s

struct ANONYMOUS4_ui32
    monitor_mode::UInt32
    gpu_single_step_mode::UInt32
    disable_l1_scalar::UInt32
    disable_l1_vector::UInt32
    disable_l2_cache::UInt32
    reserved_cu_num::UInt32
    reserved::UInt32
end

struct ANONYMOUS3_ui32
    ui32::ANONYMOUS4_ui32
end

struct hsa_ext_tools_kernel_execution_mode_s
    ui32::ANONYMOUS3_ui32
end

const hsa_ext_tools_kernel_execution_mode_t = hsa_ext_tools_kernel_execution_mode_s
const hsa_ext_tools_cache_flush_options_t = hsa_ext_tools_cache_flush_options_s
const hsa_ext_tools_event_t = UInt64
const hsa_ext_module_t = BrigModule_t

struct hsa_ext_program_s
    handle::UInt64
end

const hsa_ext_program_t = hsa_ext_program_s

@cenum hsa_ext_program_info_t::UInt32 begin
    HSA_EXT_PROGRAM_INFO_MACHINE_MODEL = 0
    HSA_EXT_PROGRAM_INFO_PROFILE = 1
    HSA_EXT_PROGRAM_INFO_DEFAULT_FLOAT_ROUNDING_MODE = 2
end

@cenum hsa_ext_finalizer_call_convention_t::Int32 begin
    HSA_EXT_FINALIZER_CALL_CONVENTION_AUTO = -1
end


struct hsa_ext_control_directives_s
    control_directives_mask::UInt64
    break_exceptions_mask::UInt16
    detect_exceptions_mask::UInt16
    max_dynamic_group_size::UInt32
    max_flat_grid_size::UInt64
    max_flat_workgroup_size::UInt32
    reserved1::UInt32
    required_grid_size::NTuple{3, UInt64}
    required_workgroup_size::hsa_dim3_t
    required_dim::UInt8
    reserved2::NTuple{75, UInt8}
end

const hsa_ext_control_directives_t = hsa_ext_control_directives_s

struct hsa_ext_finalizer_1_00_pfn_s
    hsa_ext_program_create::Ptr{Cvoid}
    hsa_ext_program_destroy::Ptr{Cvoid}
    hsa_ext_program_add_module::Ptr{Cvoid}
    hsa_ext_program_iterate_modules::Ptr{Cvoid}
    hsa_ext_program_get_info::Ptr{Cvoid}
    hsa_ext_program_finalize::Ptr{Cvoid}
end

const hsa_ext_finalizer_1_00_pfn_t = hsa_ext_finalizer_1_00_pfn_s
const HSA_AQLPROFILE_VERSION_MAJOR = 2
const HSA_AQLPROFILE_VERSION_MINOR = 0
const hsa_ven_amd_aqlprofile_VERSION_MAJOR = 1

# Skipping MacroDefinition: hsa_ven_amd_aqlprofile_LIB ( suff ) "libhsa-amd-aqlprofile" suff ".so"

@cenum hsa_ven_amd_aqlprofile_event_type_t::UInt32 begin
    HSA_VEN_AMD_AQLPROFILE_EVENT_TYPE_PMC = 0
    HSA_VEN_AMD_AQLPROFILE_EVENT_TYPE_SQTT = 1
end

@cenum hsa_ven_amd_aqlprofile_block_name_t::UInt32 begin
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_CPC = 0
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_CPF = 1
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_GDS = 2
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_GRBM = 3
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_GRBMSE = 4
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_SPI = 5
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_SQ = 6
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_SQCS = 7
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_SRBM = 8
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_SX = 9
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_TA = 10
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_TCA = 11
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_TCC = 12
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_TCP = 13
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_TD = 14
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_MCARB = 15
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_MCHUB = 16
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_MCMCBVM = 17
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_MCSEQ = 18
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_MCVML2 = 19
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_MCXBAR = 20
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_ATC = 21
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_ATCL2 = 22
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_GCEA = 23
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_RPB = 24
    HSA_VEN_AMD_AQLPROFILE_BLOCK_NAME_SDMA = 25
    HSA_VEN_AMD_AQLPROFILE_BLOCKS_NUMBER = 26
end


struct hsa_ven_amd_aqlprofile_event_t
    block_name::hsa_ven_amd_aqlprofile_block_name_t
    block_index::UInt32
    counter_id::UInt32
end

@cenum hsa_ven_amd_aqlprofile_parameter_name_t::UInt32 begin
    HSA_VEN_AMD_AQLPROFILE_PARAMETER_NAME_COMPUTE_UNIT_TARGET = 0
    HSA_VEN_AMD_AQLPROFILE_PARAMETER_NAME_VM_ID_MASK = 1
    HSA_VEN_AMD_AQLPROFILE_PARAMETER_NAME_MASK = 2
    HSA_VEN_AMD_AQLPROFILE_PARAMETER_NAME_TOKEN_MASK = 3
    HSA_VEN_AMD_AQLPROFILE_PARAMETER_NAME_TOKEN_MASK2 = 4
    HSA_VEN_AMD_AQLPROFILE_PARAMETER_NAME_SE_MASK = 5
    HSA_VEN_AMD_AQLPROFILE_PARAMETER_NAME_SAMPLE_RATE = 6
end


struct hsa_ven_amd_aqlprofile_parameter_t
    parameter_name::hsa_ven_amd_aqlprofile_parameter_name_t
    value::UInt32
end

struct hsa_ven_amd_aqlprofile_descriptor_t
    ptr::Ptr{Cvoid}
    size::UInt32
end

struct hsa_ven_amd_aqlprofile_profile_t
    agent::hsa_agent_t
    type::hsa_ven_amd_aqlprofile_event_type_t
    events::Ptr{hsa_ven_amd_aqlprofile_event_t}
    event_count::UInt32
    parameters::Ptr{hsa_ven_amd_aqlprofile_parameter_t}
    parameter_count::UInt32
    output_buffer::hsa_ven_amd_aqlprofile_descriptor_t
    command_buffer::hsa_ven_amd_aqlprofile_descriptor_t
end

struct hsa_ext_amd_aql_pm4_packet_t
    header::UInt16
    pm4_command::NTuple{27, UInt16}
    completion_signal::hsa_signal_t
end

struct hsa_ven_amd_aqlprofile_info_data_t
    sample_id::UInt32
end

struct hsa_ven_amd_aqlprofile_id_query_t
    name::Cstring
    id::UInt32
    instance_count::UInt32
end

@cenum hsa_ven_amd_aqlprofile_info_type_t::UInt32 begin
    HSA_VEN_AMD_AQLPROFILE_INFO_COMMAND_BUFFER_SIZE = 0
    HSA_VEN_AMD_AQLPROFILE_INFO_PMC_DATA_SIZE = 1
    HSA_VEN_AMD_AQLPROFILE_INFO_PMC_DATA = 2
    HSA_VEN_AMD_AQLPROFILE_INFO_SQTT_DATA = 3
    HSA_VEN_AMD_AQLPROFILE_INFO_BLOCK_COUNTERS = 4
    HSA_VEN_AMD_AQLPROFILE_INFO_BLOCK_ID = 5
    HSA_VEN_AMD_AQLPROFILE_INFO_ENABLE_CMD = 6
end


const hsa_ven_amd_aqlprofile_data_callback_t = Ptr{Cvoid}

struct hsa_ven_amd_aqlprofile_1_00_pfn_s
    hsa_ven_amd_aqlprofile_version_major::Ptr{Cvoid}
    hsa_ven_amd_aqlprofile_version_minor::Ptr{Cvoid}
    hsa_ven_amd_aqlprofile_error_string::Ptr{Cvoid}
    hsa_ven_amd_aqlprofile_validate_event::Ptr{Cvoid}
    hsa_ven_amd_aqlprofile_start::Ptr{Cvoid}
    hsa_ven_amd_aqlprofile_stop::Ptr{Cvoid}
    hsa_ven_amd_aqlprofile_read::Ptr{Cvoid}
    hsa_ven_amd_aqlprofile_legacy_get_pm4::Ptr{Cvoid}
    hsa_ven_amd_aqlprofile_get_info::Ptr{Cvoid}
    hsa_ven_amd_aqlprofile_iterate_data::Ptr{Cvoid}
end

const hsa_ven_amd_aqlprofile_1_00_pfn_t = hsa_ven_amd_aqlprofile_1_00_pfn_s
const hsa_ven_amd_aqlprofile_pfn_t = hsa_ven_amd_aqlprofile_1_00_pfn_t
const hsa_ven_amd_loader = 1000

@cenum hsa_ven_amd_loader_code_object_storage_type_t::UInt32 begin
    HSA_VEN_AMD_LOADER_CODE_OBJECT_STORAGE_TYPE_NONE = 0
    HSA_VEN_AMD_LOADER_CODE_OBJECT_STORAGE_TYPE_FILE = 1
    HSA_VEN_AMD_LOADER_CODE_OBJECT_STORAGE_TYPE_MEMORY = 2
end


struct hsa_ven_amd_loader_segment_descriptor_s
    agent::hsa_agent_t
    executable::hsa_executable_t
    code_object_storage_type::hsa_ven_amd_loader_code_object_storage_type_t
    code_object_storage_base::Ptr{Cvoid}
    code_object_storage_size::Csize_t
    code_object_storage_offset::Csize_t
    segment_base::Ptr{Cvoid}
    segment_size::Csize_t
end

const hsa_ven_amd_loader_segment_descriptor_t = hsa_ven_amd_loader_segment_descriptor_s

@cenum hsa_ven_amd_loader_loaded_code_object_kind_t::UInt32 begin
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_KIND_PROGRAM = 1
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_KIND_AGENT = 2
end

@cenum hsa_ven_amd_loader_loaded_code_object_info_e::UInt32 begin
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_INFO_EXECUTABLE = 1
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_INFO_KIND = 2
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_INFO_AGENT = 3
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_INFO_CODE_OBJECT_STORAGE_TYPE = 4
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_INFO_CODE_OBJECT_STORAGE_MEMORY_BASE = 5
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_INFO_CODE_OBJECT_STORAGE_MEMORY_SIZE = 6
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_INFO_CODE_OBJECT_STORAGE_FILE = 7
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_INFO_LOAD_DELTA = 8
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_INFO_LOAD_BASE = 9
    HSA_VEN_AMD_LOADER_LOADED_CODE_OBJECT_INFO_LOAD_SIZE = 10
end


const hsa_ven_amd_loader_loaded_code_object_info_t = hsa_ven_amd_loader_loaded_code_object_info_e

struct hsa_ven_amd_loader_1_00_pfn_s
    hsa_ven_amd_loader_query_host_address::Ptr{Cvoid}
    hsa_ven_amd_loader_query_segment_descriptors::Ptr{Cvoid}
    hsa_ven_amd_loader_query_executable::Ptr{Cvoid}
end

const hsa_ven_amd_loader_1_00_pfn_t = hsa_ven_amd_loader_1_00_pfn_s

struct hsa_ven_amd_loader_1_01_pfn_s
    hsa_ven_amd_loader_query_host_address::Ptr{Cvoid}
    hsa_ven_amd_loader_query_segment_descriptors::Ptr{Cvoid}
    hsa_ven_amd_loader_query_executable::Ptr{Cvoid}
    hsa_ven_amd_loader_executable_iterate_loaded_code_objects::Ptr{Cvoid}
    hsa_ven_amd_loader_loaded_code_object_get_info::Ptr{Cvoid}
end

const hsa_ven_amd_loader_1_01_pfn_t = hsa_ven_amd_loader_1_01_pfn_s
